var gdpr = function(e) {
	"use strict";
	const t = e => e.replace(/.*\.([^.]*[^0-9][^.]*\.[^.]*[^.0-9][^.]*$)/, "$1"),
		s = e => {
			const t = window.location.href,
				s = new RegExp(`[\\?&]${e}=?([^&#]*)?`).exec(t);
			return null !== s && s[1]
		},
		n = (e, t) => "object" == typeof t && t.indexOf(e) > -1,
		o = n,
		r = {
			info: "#015e7a",
			warning: "#7a5901",
			error: "#7a1d01"
		},
		i = () => (window.lmd || {}).hasOwnProperty("debug") ? !!window.lmd.debug : !1 !== s("gdpr_debug"),
		a = (e, t) => {
			"object" != typeof e && (e = [e]);
			const s = r[t] || "#222",
				n = "info" === t ? "log" : t;console && "function" == typeof console[n] && i() && console[n]("%cGDPR", `display: inline-block; color: #ffffff; background: ${s}; font-weight: 600; padding: 1px 4px; border-radius: 3px;`, ...e)
		},
		c = e => (e => {
			"verbose" === s("gdpr_debug") && a(e, "info")
		})(e),
		l = e => a(e, "info"),
		d = e => a(e, "error"),
		p = e => a(e, "warning"),
		u = (e, t) => (Object.keys(t).forEach((s => {
			void 0 === e[s] ? e[s] = t[s] : typeof t[s] != typeof e[s] ? p(`bad configuration type for ${s}, must be an instance of ${typeof e[s]}`) : "object" == typeof t[s] ? u(e[s], t[s]) : e[s] = t[s]
		})), e),
		h = {
			identifier: "default",
			displayMode: "standard",
			entryPoint: null,
			cookiePrefix: "",
			lang: "fr",
			hosts: {
				cmp: `cmp.${t(document.location.hostname)}`
			},
			abtests: {
				token: !1,
				defaultToken: 100,
				variants: [],
				variantName: ""
			},
			content: {
				paramsRefresh: !0
			},
			modules: {
				parameters: {
					name: "gdpr-glm-params",
					css: "/css/default/parameters.min.css",
					tpl: "/html/default/parameters.html"
				},
				partners: {
					name: "gdpr-glm-partners",
					css: "/css/default/partners.min.css",
					tpl: "/html/default/partners.html"
				},
				standard: {
					name: "gdpr-glm-standard",
					css: "/css/default/standard.min.css",
					tpl: "/html/default/standard.html"
				},
				amp_main: {
					name: "gdpr-glm-amp",
					css: "/css/default/amp.min.css",
					tpl: "/html/default/main-amp.html"
				},
				amp_frame: {
					name: "gdpr-glm-frame",
					css: "/css/default/frame.min.css",
					tpl: "/html/default/frame-amp.html"
				}
			},
			setTemplate: e => {
				void 0 !== h.modules[h.displayMode] && (h.modules[h.displayMode].tpl = e)
			},
			setEntryPoint: e => {
				h.entryPoint = e
			},
			override: e => {
				Object.keys(e).forEach((t => {
					void 0 === h[t] ? h[t] = e[t] : typeof e[t] != typeof h[t] ? p(`bad configuration type for ${t}, must be an instance of ${typeof h[t]}`) : "object" == typeof e[t] ? u(h[t], e[t]) : h[t] = e[t]
				}))
			},
			overrideFromQueryString: () => {!1 !== s("gdpr_displayMode") && (h.displayMode = s("gdpr_displayMode")),
				!1 !== s("gdpr_acceptAll") && (h.consent = {
					lmdConsent: {
						purposes: {
							ads: !0,
							analytics: !0,
							personalization: !0,
							mediaPlatforms: !0,
							social: !0
						}
					},
					consentString: "CPZe5vhPZe5vhFzABBFRBdCgAP_AAH_AAAqIH7Nf_X__b3_n-_79__t0eY1f9_7_v-0zjhfdt-8N2f_X_L8X_2M7vF36pr4KuR4ku3bBIQdtHOncTUmx6olVrTPsbk2Mr7NKJ7Pkmnsbe2dYGH9_n93T_ZKZ7______7________________________-_____9____________wP2AJMNS-AC7EscGSaNKoUQIQrCQ6AUAFFAMLRNYQMrgp2VwEeoIGACE1ARgRAgxBRiwCAAQCAJCIgJADwQCIAiAQAAgBUgIQAEbAILACwMAgAFANCxAigCECQgyOCo5TAgIkWignsrAEou9jTCEMosAKBR_RUYCJQggWBkJCwcxgAA"
				}),
				!1 !== s("gdpr_denyAll") && (h.consent = {
					lmdConsent: {
						purposes: {
							ads: !1,
							analytics: !1,
							personalization: !1,
							mediaPlatforms: !1,
							social: !1
						}
					},
					consentString: "CPZe57IPZe57IFzABCFRBdCgAAAAAAAAAAAAAAAAAAAA"
				}),
				!1 !== s("gdpr_greenframe") && (h.consent = {
					lmdConsent: {
						purposes: {
							ads: !1,
							analytics: !0,
							personalization: !0,
							mediaPlatforms: !0,
							social: !0
						}
					},
					consentString: "CPZe57IPZe57IFzABCFRBdCgAAAAAAAAAAAAAAAAAAAA"
				})
			},
			overrideFromSite: () => {
				h.override(window.GDPR_CONFIG || {}),
				h.overrideFromQueryString(),
				void 0 !== h.tpl && h.setTemplate(h.tpl)
			}
		},
		m = () => (c("[Piano] should use Piano ? " + (!0 === window ? .GDPR_CONFIG ? .usePiano ? "true" : "false")), !0 === window ? .GDPR_CONFIG ? .usePiano);
	var g = (e, t) => new Array(t - e + 1).fill(void 0).map(((t, s) => s + e));
	const f = document.currentScript || {
			src: `cmp.${t(document.location.hostname)}`
		},
		v = (f.src.match(/[^.]+.([^-]+)?-?lemonde.(fr|io)/) || [])[1] || "prd",
		y = new URL(f.src).hostname,
		b = ["www.lemonde.fr", "stg-www.lemonde.io", "tst-www.lemonde.io", "podcasts.lemonde.fr", "stg-podcasts.lemonde.io"],
		w = () => o(document.location.host, b) || "undefined" != typeof lmd ? "object" == typeof lmd && lmd.user && lmd.user.abo && lmd.user.abo ? "subscriber" : "cookiewall" : "standard",
		E = {
			identifier: "lemonde",
			displayMode: w(),
			cookiePrefix: o(document.location.host, b) || "undefined" != typeof lmd ? "" : "ext_",
			hosts: {
				abo: "prd" === v ? "abo.lemonde.fr" : `${v}-abo.lemonde.io`,
				cmp: y,
				secure: "prd" === v ? "secure.lemonde.fr" : `secure.${v}-lemonde.fr`,
				www: "prd" === v ? "www.lemonde.fr" : `www.${v}-lemonde.fr`
			},
			blacklistedHost: ["secure.lemonde.fr", "stg-secure.lemonde.io", "tst-secure.lemonde.io", "int-secure.lemonde.io", "loc-secure.lemonde.io", "macommande.lemonde.fr", "stg-macommande.lemonde.io", "tst-macommande.lemonde.io", "int-macommande.lemonde.io", "loc-macommande.lemonde.io", "moncompte.lemonde.fr", "stg-moncompte.lemonde.io", "tst-moncompte.lemonde.io", "int-moncompte.lemonde.io", "loc-moncompte.lemonde.io", "compte.lemonde.fr", "stg-compte.lemonde.io", "tst-compte.lemonde.io", "int-compte.lemonde.io", "loc-compte.lemonde.io"],
			blacklistedPath: ["/confidentialite/", "/en/privacy-policy/", "/cgv", "/cgv-en", "/mentions-legales", "/legal-information", "/faq/", "/en/faq/"],
			abtests: {
				token: !1,
				defaultToken: 100,
				variants: [{
					module: "cookiewall",
					key: "cookiewall-a",
					tokens: g(1, 96),
					displayMode: w(),
					tpl: "/html/lemonde/wall-tunnel-abo-essential.html",
					name: "version-a"
				}, {
					module: "cookiewall",
					key: "cookiewall-aprime",
					tokens: [97],
					displayMode: w(),
					tpl: "/html/lemonde/wall-aprime.html",
					name: "version-aprime"
				}, {
					module: "cookiewall",
					key: "cookiewall-b",
					tokens: [98],
					displayMode: w(),
					tpl: "/html/lemonde/wall-b.html",
					name: "version-b"
				}, {
					module: "cookiewall",
					key: "cookiewall-bprime",
					tokens: [99],
					displayMode: w(),
					tpl: "/html/lemonde/wall-bprime.html",
					name: "version-bprime"
				}, {
					module: "cookiewall",
					key: "cookiewall-c",
					tokens: [100],
					displayMode: w(),
					tpl: "/html/lemonde/wall-c.html",
					name: "version-c"
				}]
			},
			content: {
				siteName: "Le Monde",
				aName: "au Monde",
				deName: "du Monde"
			},
			modules: {
				parameters: {
					name: "gdpr-lmd-params",
					css: "/css/lemonde/parameters.min.css",
					tpl: "/html/lemonde/parameters.html"
				},
				partners: {
					name: "gdpr-lmd-partners",
					css: "/css/lemonde/partners.min.css",
					tpl: "/html/lemonde/partners.html"
				},
				remove: {
					name: "gdpr-lmd-remove",
					css: "/css/lemonde/remove.min.css",
					tpl: "/html/lemonde/remove.html"
				},
				standard: {
					name: "gdpr-lmd-standard",
					css: "/css/lemonde/standard.min.css",
					tpl: "/html/lemonde/standard-transparent-deny.html"
				},
				subscriber: {
					name: "gdpr-lmd-subscriber",
					css: "/css/lemonde/subscriber.min.css",
					tpl: "/html/lemonde/subscriber.html"
				},
				cookiewall: {
					name: "gdpr-lmd-wall",
					css: "/css/lemonde/wall.min.css",
					tpl: "/html/lemonde/wall-tunnel-abo-essential.html"
				}
			}
		},
		A = (e, t) => {
			const s = Element.prototype;
			return(s.matches || s.webkitMatchesSelector || s.mozMatchesSelector || s.msMatchesSelector || (e => -1 !== [].indexOf.call(document.querySelectorAll(e), window))).call(e, t)
		};
	var S = A;
	const C = (e, t, s, n) => {
		e.addEventListener(t, (e => {
			e.target && S(e.target, s) && n(e)
		}))
	};

	function _(e) {
		"loading" === document.readyState ? document.addEventListener("DOMContentLoaded", (() => {
			e()
		})) : e()
	}
	const I = "data-popin-toggle-target",
		L = "data-popin-toggle-scope",
		T = "ui-collapse--shown",
		V = e => {
			const t = (e => e.hasAttribute(L) ? document.querySelector(e.getAttribute(L)) : e.parentNode)(e),
				s = ((e, t) => !!e.hasAttribute(I) && t.querySelectorAll(e.getAttribute(I)))(e, t);
			if(e.classList.toggle(T), s && s.length > 0)
				for(let e = 0; e < s.length; e += 1) s[e].classList.toggle(T)
		};

	function k() {
		return window.ATInternet && window.ATInternet.Tracker && Array.isArray(window.ATInternet.Tracker.instances) && 1 === window.ATInternet.Tracker.instances.length ? window.ATInternet.Tracker.instances[0] : null
	}

	function P(e) {
		(function() {
			if(O()) return window.cmpDataLayer;
			return window.cmpDataLayer = [], window.cmpDataLayer
		})().push(e)
	}

	function O() {
		return window.cmpDataLayer && Array.isArray(window.cmpDataLayer)
	}
	C(document, "click", '[data-popin-toggle="collapse"]', (e => {
		"A" === e.currentTarget.tagName && e.preventDefault(),
		V(e.target)
	}));
	const N = window.setInterval((function() {
			c("call to sendSmartTagEvents");
			const e = k();
			if(c(`type of smartTag --\x3e ${typeof e}, is null ? --\x3e ${null===e}`), null === e) return M > 4 && (c(`clearInterval ${N}`), clearInterval(N)), void(M += 1);
			if(O())
				for(; window.cmpDataLayer.length > 0;) {
					const e = window.cmpDataLayer.pop();
					"function" == typeof e && e()
				}
			c(`clearInterval ${N}`), clearInterval(N)
		}
		/*!
		 * cookie
		 * Copyright(c) 2012-2014 Roman Shtylman
		 * Copyright(c) 2015 Douglas Christopher Wilson
		 * MIT Licensed
		 */
	), 1e3);
	let M = 0;
	var R = function(e, t) {
			if("string" != typeof e) throw new TypeError("argument str must be a string");
			for(var s = {}, n = t || {}, o = e.split(U), r = n.decode || D, i = 0; i < o.length; i++) {
				var a = o[i],
					c = a.indexOf("=");
				if(!(c < 0)) {
					var l = a.substr(0, c).trim(),
						d = a.substr(++c, a.length).trim();
					'"' == d[0] && (d = d.slice(1, -1)), null == s[l] && (s[l] = G(d, r))
				}
			}
			return s
		},
		x = function(e, t, s) {
			var n = s || {},
				o = n.encode || $;
			if("function" != typeof o) throw new TypeError("option encode is invalid");
			if(!F.test(e)) throw new TypeError("argument name is invalid");
			var r = o(t);
			if(r && !F.test(r)) throw new TypeError("argument val is invalid");
			var i = e + "=" + r;
			if(null != n.maxAge) {
				var a = n.maxAge - 0;
				if(isNaN(a) || !isFinite(a)) throw new TypeError("option maxAge is invalid");
				i += "; Max-Age=" + Math.floor(a)
			}
			if(n.domain) {
				if(!F.test(n.domain)) throw new TypeError("option domain is invalid");
				i += "; Domain=" + n.domain
			}
			if(n.path) {
				if(!F.test(n.path)) throw new TypeError("option path is invalid");
				i += "; Path=" + n.path
			}
			if(n.expires) {
				if("function" != typeof n.expires.toUTCString) throw new TypeError("option expires is invalid");
				i += "; Expires=" + n.expires.toUTCString()
			}
			n.httpOnly && (i += "; HttpOnly");
			n.secure && (i += "; Secure");
			if(n.sameSite) {
				switch("string" == typeof n.sameSite ? n.sameSite.toLowerCase() : n.sameSite) {
					case !0:
						i += "; SameSite=Strict";
						break;
					case "lax":
						i += "; SameSite=Lax";
						break;
					case "strict":
						i += "; SameSite=Strict";
						break;
					case "none":
						i += "; SameSite=None";
						break;
					default:
						throw new TypeError("option sameSite is invalid")
				}
			}
			return i
		},
		D = decodeURIComponent,
		$ = encodeURIComponent,
		U = /; */,
		F = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;

	function G(e, t) {
		try {
			return t(e)
		} catch(t) {
			return e
		}
	}

	function H(e, t) {
		void 0 === t && (t = {});
		var s = function(e) {
			if(e && "j" === e[0] && ":" === e[1]) return e.substr(2);
			return e
		}(e);
		if(function(e, t) {
				return void 0 === t && (t = !e || "{" !== e[0] && "[" !== e[0] && '"' !== e[0]), !t
			}(s, t.doNotParse)) try {
			return JSON.parse(s)
		} catch(e) {}
		return e
	}
	var j = window && window.__assign || function() {
			return(j = Object.assign || function(e) {
				for(var t, s = 1, n = arguments.length; s < n; s++)
					for(var o in t = arguments[s]) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
				return e
			}).apply(this, arguments)
		},
		B = function() {
			function e(e, t) {
				var s = this;
				this.changeListeners = [], this.HAS_DOCUMENT_COOKIE = !1, this.cookies = function(e, t) {
					return "string" == typeof e ? R(e, t) : "object" == typeof e && null !== e ? e : {}
				}(e, t), new Promise((function() {
					s.HAS_DOCUMENT_COOKIE = "object" == typeof document && "string" == typeof document.cookie
				})).catch((function() {}))
			}
			return e.prototype._updateBrowserValues = function(e) {
				this.HAS_DOCUMENT_COOKIE && (this.cookies = R(document.cookie, e))
			}, e.prototype._emitChange = function(e) {
				for(var t = 0; t < this.changeListeners.length; ++t) this.changeListeners[t](e)
			}, e.prototype.get = function(e, t, s) {
				return void 0 === t && (t = {}), this._updateBrowserValues(s), H(this.cookies[e], t)
			}, e.prototype.getAll = function(e, t) {
				void 0 === e && (e = {}), this._updateBrowserValues(t);
				var s = {};
				for(var n in this.cookies) s[n] = H(this.cookies[n], e);
				return s
			}, e.prototype.set = function(e, t, s) {
				var n;
				"object" == typeof t && (t = JSON.stringify(t)), this.cookies = j(j({}, this.cookies), ((n = {})[e] = t, n)), this.HAS_DOCUMENT_COOKIE && (document.cookie = x(e, t, s)), this._emitChange({
					name: e,
					value: t,
					options: s
				})
			}, e.prototype.remove = function(e, t) {
				var s = t = j(j({}, t), {
					expires: new Date(1970, 1, 1, 0, 0, 1),
					maxAge: 0
				});
				this.cookies = j({}, this.cookies), delete this.cookies[e], this.HAS_DOCUMENT_COOKIE && (document.cookie = x(e, "", s)), this._emitChange({
					name: e,
					value: void 0,
					options: t
				})
			}, e.prototype.addChangeListener = function(e) {
				this.changeListeners.push(e)
			}, e.prototype.removeChangeListener = function(e) {
				var t = this.changeListeners.indexOf(e);
				t >= 0 && this.changeListeners.splice(t, 1)
			}, e
		}();
	const Q = () => `${h.cookiePrefix}lmd_consent`,
		q = () => `${h.cookiePrefix}lmd_gdpr_token`,
		z = () => `${h.cookiePrefix}euconsent-v2`,
		K = new B,
		J = () => K,
		W = J(),
		Y = `${t(window.location.hostname)}`,
		Z = h.abtests.variants || [];
	let X = !1;
	const ee = s("gdpr_forceToken");
	if(ee) {
		const e = new Date;
		W.set(q(), ee, {
			path: "/",
			domain: Y,
			expires: new Date(e.setFullYear(e.getFullYear() + 1)),
			secure: !0,
			sameSite: "none"
		})
	}
	const te = () => {
		let e = !1,
			t = W.get(q()) || !1;
		var s, n;
		if(c(`abtest debug - current token -> ${t}`), (t <= 0 || t > 100) && (t = !1), !1 === t && (s = 1, n = 100, s = Math.ceil(s), n = Math.floor(n), e = Math.floor(Math.random() * (n - s + 1)) + s, t = e, c(`abtest debug - randon token given -> ${e}`)), !1 !== e) {
			const t = new Date;
			W.set(q(), e, {
				path: "/",
				domain: Y,
				expires: new Date(t.setFullYear(t.getFullYear() + 1)),
				secure: !0,
				sameSite: "none"
			})
		}
		return +t
	};
	var se, ne, oe, re, ie, ae, ce, le;
	! function(e) {
		e.PING = "ping", e.GET_TC_DATA = "getTCData", e.GET_IN_APP_TC_DATA = "getInAppTCData", e.GET_VENDOR_LIST = "getVendorList", e.ADD_EVENT_LISTENER = "addEventListener", e.REMOVE_EVENT_LISTENER = "removeEventListener"
	}(se || (se = {})),
	function(e) {
		e.STUB = "stub", e.LOADING = "loading", e.LOADED = "loaded", e.ERROR = "error"
	}(ne || (ne = {})),
	function(e) {
		e.VISIBLE = "visible", e.HIDDEN = "hidden", e.DISABLED = "disabled"
	}(oe || (oe = {})),
	function(e) {
		e.TC_LOADED = "tcloaded", e.CMP_UI_SHOWN = "cmpuishown", e.USER_ACTION_COMPLETE = "useractioncomplete"
	}(re || (re = {}));
	class de {
		listenerId;
		callback;
		next;
		param;
		success = !0;
		constructor(e, t, s, n) {
			Object.assign(this, {
				callback: e,
				listenerId: s,
				param: t,
				next: n
			});
			try {
				this.respond()
			} catch(e) {
				this.invokeCallback(null)
			}
		}
		invokeCallback(e) {
			const t = null !== e;
			"function" == typeof this.next ? this.callback(this.next, e, t) : this.callback(e, t)
		}
	}
	class pe extends de {
		respond() {
			this.throwIfParamInvalid(), this.invokeCallback(new fe(this.param, this.listenerId))
		}
		throwIfParamInvalid() {
			if(!(void 0 === this.param || Array.isArray(this.param) && this.param.every(Number.isInteger))) throw new Error("Invalid Parameter")
		}
	}
	class ue {
		eventQueue = new Map;
		queueNumber = 0;
		add(e) {
			return this.eventQueue.set(this.queueNumber, e), this.queueNumber++
		}
		remove(e) {
			return this.eventQueue.delete(e)
		}
		exec() {
			this.eventQueue.forEach(((e, t) => {
				new pe(e.callback, e.param, t, e.next)
			}))
		}
		clear() {
			this.queueNumber = 0, this.eventQueue.clear()
		}
		get size() {
			return this.eventQueue.size
		}
	}
	class he {
		static apiVersion = "2";
		static tcfPolicyVersion;
		static eventQueue = new ue;
		static cmpStatus = ne.LOADING;
		static disabled = !1;
		static displayStatus = oe.HIDDEN;
		static cmpId;
		static cmpVersion;
		static eventStatus;
		static gdprApplies;
		static tcModel;
		static tcString;
		static reset() {
			delete this.cmpId, delete this.cmpVersion, delete this.eventStatus, delete this.gdprApplies, delete this.tcModel, delete this.tcString, delete this.tcfPolicyVersion, this.cmpStatus = ne.LOADING, this.disabled = !1, this.displayStatus = oe.HIDDEN, this.eventQueue.clear()
		}
	}
	class me {
		cmpId = he.cmpId;
		cmpVersion = he.cmpVersion;
		gdprApplies = he.gdprApplies;
		tcfPolicyVersion = he.tcfPolicyVersion
	}
	class ge extends me {
		cmpStatus = ne.ERROR
	}
	class fe extends me {
		tcString;
		listenerId;
		eventStatus;
		cmpStatus;
		isServiceSpecific;
		useNonStandardTexts;
		publisherCC;
		purposeOneTreatment;
		outOfBand;
		purpose;
		vendor;
		specialFeatureOptins;
		publisher;
		constructor(e, t) {
			if(super(), this.eventStatus = he.eventStatus, this.cmpStatus = he.cmpStatus, this.listenerId = t, he.gdprApplies) {
				const t = he.tcModel;
				this.tcString = he.tcString, this.isServiceSpecific = t.isServiceSpecific, this.useNonStandardTexts = t.useNonStandardTexts, this.purposeOneTreatment = t.purposeOneTreatment, this.publisherCC = t.publisherCountryCode, this.outOfBand = {
					allowedVendors: this.createVectorField(t.vendorsAllowed, e),
					disclosedVendors: this.createVectorField(t.vendorsDisclosed, e)
				}, this.purpose = {
					consents: this.createVectorField(t.purposeConsents),
					legitimateInterests: this.createVectorField(t.purposeLegitimateInterests)
				}, this.vendor = {
					consents: this.createVectorField(t.vendorConsents, e),
					legitimateInterests: this.createVectorField(t.vendorLegitimateInterests, e)
				}, this.specialFeatureOptins = this.createVectorField(t.specialFeatureOptins), this.publisher = {
					consents: this.createVectorField(t.publisherConsents),
					legitimateInterests: this.createVectorField(t.publisherLegitimateInterests),
					customPurpose: {
						consents: this.createVectorField(t.publisherCustomConsents),
						legitimateInterests: this.createVectorField(t.publisherCustomLegitimateInterests)
					},
					restrictions: this.createRestrictions(t.publisherRestrictions)
				}
			}
		}
		createRestrictions(e) {
			const t = {};
			if(e.numRestrictions > 0) {
				const s = e.getMaxVendorId();
				for(let n = 1; n <= s; n++) {
					const s = n.toString();
					e.getRestrictions(n).forEach((e => {
						const n = e.purposeId.toString();t[n] || (t[n] = {}),
						t[n][s] = e.restrictionType
					}))
				}
			}
			return t
		}
		createVectorField(e, t) {
			return t ? t.reduce(((t, s) => (t[String(s)] = e.has(Number(s)), t)), {}) : [...e].reduce(((e, t) => (e[t[0].toString(10)] = t[1], e)), {})
		}
	}
	class ve extends fe {
		constructor(e) {
			super(e), delete this.outOfBand
		}
		createVectorField(e) {
			return [...e].reduce(((e, t) => e += t[1] ? "1" : "0"), "")
		}
		createRestrictions(e) {
			const t = {};
			if(e.numRestrictions > 0) {
				const s = e.getMaxVendorId();
				e.getRestrictions().forEach((e => {
					t[e.purposeId.toString()] = "_".repeat(s)
				}));
				for(let n = 0; n < s; n++) {
					const s = n + 1;
					e.getRestrictions(s).forEach((e => {
						const s = e.restrictionType.toString(),
							o = e.purposeId.toString(),
							r = t[o].substr(0, n),
							i = t[o].substr(n + 1);t[o] = r + s + i
					}))
				}
			}
			return t
		}
	}
	class ye extends me {
		cmpLoaded = !0;
		cmpStatus = he.cmpStatus;
		displayStatus = he.displayStatus;
		apiVersion = String(he.apiVersion);
		gvlVersion;
		constructor() {
			super(), he.tcModel && he.tcModel.vendorListVersion && (this.gvlVersion = +he.tcModel.vendorListVersion)
		}
	}
	class be extends de {
		respond() {
			this.invokeCallback(new ye)
		}
	}
	class we extends pe {
		respond() {
			this.throwIfParamInvalid(), this.invokeCallback(new ve(this.param))
		}
	}
	class Ee extends Error {
		constructor(e) {
			super(e), this.name = "DecodingError"
		}
	}
	class Ae extends Error {
		constructor(e) {
			super(e), this.name = "EncodingError"
		}
	}
	class Se extends Error {
		constructor(e) {
			super(e), this.name = "GVLError"
		}
	}
	class Ce extends Error {
		constructor(e, t, s = "") {
			super(`invalid value ${t} passed for ${e} ${s}`), this.name = "TCModelError"
		}
	}
	class _e {
		static DICT = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";
		static REVERSE_DICT = new Map([
			["A", 0],
			["B", 1],
			["C", 2],
			["D", 3],
			["E", 4],
			["F", 5],
			["G", 6],
			["H", 7],
			["I", 8],
			["J", 9],
			["K", 10],
			["L", 11],
			["M", 12],
			["N", 13],
			["O", 14],
			["P", 15],
			["Q", 16],
			["R", 17],
			["S", 18],
			["T", 19],
			["U", 20],
			["V", 21],
			["W", 22],
			["X", 23],
			["Y", 24],
			["Z", 25],
			["a", 26],
			["b", 27],
			["c", 28],
			["d", 29],
			["e", 30],
			["f", 31],
			["g", 32],
			["h", 33],
			["i", 34],
			["j", 35],
			["k", 36],
			["l", 37],
			["m", 38],
			["n", 39],
			["o", 40],
			["p", 41],
			["q", 42],
			["r", 43],
			["s", 44],
			["t", 45],
			["u", 46],
			["v", 47],
			["w", 48],
			["x", 49],
			["y", 50],
			["z", 51],
			["0", 52],
			["1", 53],
			["2", 54],
			["3", 55],
			["4", 56],
			["5", 57],
			["6", 58],
			["7", 59],
			["8", 60],
			["9", 61],
			["-", 62],
			["_", 63]
		]);
		static BASIS = 6;
		static LCM = 24;
		static encode(e) {
			if(!/^[0-1]+$/.test(e)) throw new Ae("Invalid bitField");
			const t = e.length % this.LCM;
			e += t ? "0".repeat(this.LCM - t) : "";
			let s = "";
			for(let t = 0; t < e.length; t += this.BASIS) s += this.DICT[parseInt(e.substr(t, this.BASIS), 2)];
			return s
		}
		static decode(e) {
			if(!/^[A-Za-z0-9\-_]+$/.test(e)) throw new Ee("Invalidly encoded Base64URL string");
			let t = "";
			for(let s = 0; s < e.length; s++) {
				const n = this.REVERSE_DICT.get(e[s]).toString(2);
				t += "0".repeat(this.BASIS - n.length) + n
			}
			return t
		}
	}
	class Ie {
		static langSet = new Set(["AR", "BG", "BS", "CA", "CS", "DA", "DE", "EL", "EN", "ES", "ET", "EU", "FI", "FR", "GL", "HR", "HU", "IT", "JA", "LT", "LV", "MT", "NL", "NO", "PL", "PT-BR", "PT-PT", "RO", "RU", "SK", "SL", "SR-LATN", "SR-CYRL", "SV", "TR", "ZH"]);
		has(e) {
			return Ie.langSet.has(e)
		}
		parseLanguage(e) {
			const t = (e = e.toUpperCase()).split("-")[0];
			if(e.length >= 2 && 2 == t.length) {
				if(Ie.langSet.has(e)) return e;
				if(Ie.langSet.has(t)) return t;
				const s = t + "-" + t;
				if(Ie.langSet.has(s)) return s;
				for(const s of Ie.langSet)
					if(-1 !== s.indexOf(e) || -1 !== s.indexOf(t)) return s
			}
			throw new Error(`unsupported language ${e}`)
		}
		forEach(e) {
			Ie.langSet.forEach(e)
		}
		get size() {
			return Ie.langSet.size
		}
	}
	class Le {
		static cmpId = "cmpId";
		static cmpVersion = "cmpVersion";
		static consentLanguage = "consentLanguage";
		static consentScreen = "consentScreen";
		static created = "created";
		static supportOOB = "supportOOB";
		static isServiceSpecific = "isServiceSpecific";
		static lastUpdated = "lastUpdated";
		static numCustomPurposes = "numCustomPurposes";
		static policyVersion = "policyVersion";
		static publisherCountryCode = "publisherCountryCode";
		static publisherCustomConsents = "publisherCustomConsents";
		static publisherCustomLegitimateInterests = "publisherCustomLegitimateInterests";
		static publisherLegitimateInterests = "publisherLegitimateInterests";
		static publisherConsents = "publisherConsents";
		static publisherRestrictions = "publisherRestrictions";
		static purposeConsents = "purposeConsents";
		static purposeLegitimateInterests = "purposeLegitimateInterests";
		static purposeOneTreatment = "purposeOneTreatment";
		static specialFeatureOptins = "specialFeatureOptins";
		static useNonStandardTexts = "useNonStandardTexts";
		static vendorConsents = "vendorConsents";
		static vendorLegitimateInterests = "vendorLegitimateInterests";
		static vendorListVersion = "vendorListVersion";
		static vendorsAllowed = "vendorsAllowed";
		static vendorsDisclosed = "vendorsDisclosed";
		static version = "version"
	}
	class Te {
		clone() {
			const e = new this.constructor;
			return Object.keys(this).forEach((t => {
				const s = this.deepClone(this[t]);void 0 !== s && (e[t] = s)
			})), e
		}
		deepClone(e) {
			const t = typeof e;
			if("number" === t || "string" === t || "boolean" === t) return e;
			if(null !== e && "object" === t) {
				if("function" == typeof e.clone) return e.clone();
				if(e instanceof Date) return new Date(e.getTime());
				if(void 0 !== e[Symbol.iterator]) {
					const t = [];
					for(const s of e) t.push(this.deepClone(s));
					return e instanceof Array ? t : new e.constructor(t)
				} {
					const t = {};
					for(const s in e) e.hasOwnProperty(s) && (t[s] = this.deepClone(e[s]));
					return t
				}
			}
		}
	}! function(e) {
		e[e.NOT_ALLOWED = 0] = "NOT_ALLOWED", e[e.REQUIRE_CONSENT = 1] = "REQUIRE_CONSENT", e[e.REQUIRE_LI = 2] = "REQUIRE_LI"
	}(ie || (ie = {}));
	class Ve extends Te {
		static hashSeparator = "-";
		purposeId_;
		restrictionType;
		constructor(e, t) {
			super(), void 0 !== e && (this.purposeId = e), void 0 !== t && (this.restrictionType = t)
		}
		static unHash(e) {
			const t = e.split(this.hashSeparator),
				s = new Ve;
			if(2 !== t.length) throw new Ce("hash", e);
			return s.purposeId = parseInt(t[0], 10), s.restrictionType = parseInt(t[1], 10), s
		}
		get hash() {
			if(!this.isValid()) throw new Error("cannot hash invalid PurposeRestriction");
			return `${this.purposeId}${Ve.hashSeparator}${this.restrictionType}`
		}
		get purposeId() {
			return this.purposeId_
		}
		set purposeId(e) {
			this.purposeId_ = e
		}
		isValid() {
			return Number.isInteger(this.purposeId) && this.purposeId > 0 && (this.restrictionType === ie.NOT_ALLOWED || this.restrictionType === ie.REQUIRE_CONSENT || this.restrictionType === ie.REQUIRE_LI)
		}
		isSameAs(e) {
			return this.purposeId === e.purposeId && this.restrictionType === e.restrictionType
		}
	}
	class ke extends Te {
		bitLength = 0;
		map = new Map;
		gvl_;
		has(e) {
			return this.map.has(e)
		}
		isOkToHave(e, t, s) {
			let n = !0;
			if(this.gvl ? .vendors) {
				const o = this.gvl.vendors[s];
				if(o)
					if(e === ie.NOT_ALLOWED) n = o.legIntPurposes.includes(t) || o.purposes.includes(t);
					else if(o.flexiblePurposes.length) switch(e) {
					case ie.REQUIRE_CONSENT:
						n = o.flexiblePurposes.includes(t) && o.legIntPurposes.includes(t);
						break;
					case ie.REQUIRE_LI:
						n = o.flexiblePurposes.includes(t) && o.purposes.includes(t)
				} else n = !1;
				else n = !1
			}
			return n
		}
		add(e, t) {
			if(this.isOkToHave(t.restrictionType, t.purposeId, e)) {
				const s = t.hash;
				this.has(s) || (this.map.set(s, new Set), this.bitLength = 0), this.map.get(s).add(e)
			}
		}
		restrictPurposeToLegalBasis(e) {
			const t = Array.from(this.gvl.vendorIds),
				s = e.hash,
				n = t[t.length - 1],
				o = [...Array(n).keys()].map((e => e + 1));
			if(this.has(s))
				for(let e = 1; e <= n; e++) this.map.get(s).add(e);
			else this.map.set(s, new Set(o)), this.bitLength = 0
		}
		getVendors(e) {
			let t = [];
			if(e) {
				const s = e.hash;
				this.has(s) && (t = Array.from(this.map.get(s)))
			} else {
				const e = new Set;
				this.map.forEach((t => {
					t.forEach((t => {
						e.add(t)
					}))
				})), t = Array.from(e)
			}
			return t.sort(((e, t) => e - t))
		}
		getRestrictionType(e, t) {
			let s;
			return this.getRestrictions(e).forEach((e => {
				e.purposeId === t && (void 0 === s || s > e.restrictionType) && (s = e.restrictionType)
			})), s
		}
		vendorHasRestriction(e, t) {
			let s = !1;
			const n = this.getRestrictions(e);
			for(let e = 0; e < n.length && !s; e++) s = t.isSameAs(n[e]);
			return s
		}
		getMaxVendorId() {
			let e = 0;
			return this.map.forEach((t => {
				e = Math.max(Array.from(t)[t.size - 1], e)
			})), e
		}
		getRestrictions(e) {
			const t = [];
			return this.map.forEach(((s, n) => {
				e ? s.has(e) && t.push(Ve.unHash(n)) : t.push(Ve.unHash(n))
			})), t
		}
		getPurposes() {
			const e = new Set;
			return this.map.forEach(((t, s) => {
				e.add(Ve.unHash(s).purposeId)
			})), Array.from(e)
		}
		remove(e, t) {
			const s = t.hash,
				n = this.map.get(s);
			n && (n.delete(e), 0 == n.size && (this.map.delete(s), this.bitLength = 0))
		}
		set gvl(e) {
			this.gvl_ || (this.gvl_ = e, this.map.forEach(((e, t) => {
				const s = Ve.unHash(t);Array.from(e).forEach((t => {
					this.isOkToHave(s.restrictionType, s.purposeId, t) || e.delete(t)
				}))
			})))
		}
		get gvl() {
			return this.gvl_
		}
		isEmpty() {
			return 0 === this.map.size
		}
		get numRestrictions() {
			return this.map.size
		}
	}! function(e) {
		e.COOKIE = "cookie", e.WEB = "web", e.APP = "app"
	}(ae || (ae = {})),
	function(e) {
		e.CORE = "core", e.VENDORS_DISCLOSED = "vendorsDisclosed", e.VENDORS_ALLOWED = "vendorsAllowed", e.PUBLISHER_TC = "publisherTC"
	}(ce || (ce = {}));
	class Pe {
		static ID_TO_KEY = [ce.CORE, ce.VENDORS_DISCLOSED, ce.VENDORS_ALLOWED, ce.PUBLISHER_TC];
		static KEY_TO_ID = {
			[ce.CORE]: 0,
			[ce.VENDORS_DISCLOSED]: 1,
			[ce.VENDORS_ALLOWED]: 2,
			[ce.PUBLISHER_TC]: 3
		}
	}
	class Oe extends Te {
		bitLength = 0;
		maxId_ = 0;
		set_ = new Set; * [Symbol.iterator]() {
			for(let e = 1; e <= this.maxId; e++) yield [e, this.has(e)]
		}
		values() {
			return this.set_.values()
		}
		get maxId() {
			return this.maxId_
		}
		has(e) {
			return this.set_.has(e)
		}
		unset(e) {
			Array.isArray(e) ? e.forEach((e => this.unset(e))) : "object" == typeof e ? this.unset(Object.keys(e).map((e => Number(e)))) : (this.set_.delete(Number(e)), this.bitLength = 0, e === this.maxId && (this.maxId_ = 0, this.set_.forEach((e => {
				this.maxId_ = Math.max(this.maxId, e)
			}))))
		}
		isIntMap(e) {
			let t = "object" == typeof e;
			return t = t && Object.keys(e).every((t => {
				let s = Number.isInteger(parseInt(t, 10));
				return s = s && this.isValidNumber(e[t].id),
				s = s && void 0 !== e[t].name,
				s
			})), t
		}
		isValidNumber(e) {
			return parseInt(e, 10) > 0
		}
		isSet(e) {
			let t = !1;
			return e instanceof Set && (t = Array.from(e).every(this.isValidNumber)), t
		}
		set(e) {
			if(Array.isArray(e)) e.forEach((e => this.set(e)));
			else if(this.isSet(e)) this.set(Array.from(e));
			else if(this.isIntMap(e)) this.set(Object.keys(e).map((e => Number(e))));
			else {
				if(!this.isValidNumber(e)) throw new Ce("set()", e, "must be positive integer array, positive integer, Set<number>, or IntMap");
				this.set_.add(e), this.maxId_ = Math.max(this.maxId, e), this.bitLength = 0
			}
		}
		empty() {
			this.set_ = new Set
		}
		forEach(e) {
			for(let t = 1; t <= this.maxId; t++) e(this.has(t), t)
		}
		get size() {
			return this.set_.size
		}
		setAll(e) {
			this.set(e)
		}
	}
	class Ne {
		static[Le.cmpId] = 12;
		static[Le.cmpVersion] = 12;
		static[Le.consentLanguage] = 12;
		static[Le.consentScreen] = 6;
		static[Le.created] = 36;
		static[Le.isServiceSpecific] = 1;
		static[Le.lastUpdated] = 36;
		static[Le.policyVersion] = 6;
		static[Le.publisherCountryCode] = 12;
		static[Le.publisherLegitimateInterests] = 24;
		static[Le.publisherConsents] = 24;
		static[Le.purposeConsents] = 24;
		static[Le.purposeLegitimateInterests] = 24;
		static[Le.purposeOneTreatment] = 1;
		static[Le.specialFeatureOptins] = 12;
		static[Le.useNonStandardTexts] = 1;
		static[Le.vendorListVersion] = 12;
		static[Le.version] = 6;
		static anyBoolean = 1;
		static encodingType = 1;
		static maxId = 16;
		static numCustomPurposes = 6;
		static numEntries = 12;
		static numRestrictions = 12;
		static purposeId = 6;
		static restrictionType = 2;
		static segmentType = 3;
		static singleOrRange = 1;
		static vendorId = 16
	}
	class Me {
		static encode(e) {
			return String(Number(e))
		}
		static decode(e) {
			return "1" === e
		}
	}
	class Re {
		static encode(e, t) {
			let s;
			if("string" == typeof e && (e = parseInt(e, 10)), s = e.toString(2), s.length > t || e < 0) throw new Ae(`${e} too large to encode into ${t}`);
			return s.length < t && (s = "0".repeat(t - s.length) + s), s
		}
		static decode(e, t) {
			if(t !== e.length) throw new Ee("invalid bit length");
			return parseInt(e, 2)
		}
	}
	class xe {
		static encode(e, t) {
			return Re.encode(Math.round(e.getTime() / 100), t)
		}
		static decode(e, t) {
			if(t !== e.length) throw new Ee("invalid bit length");
			const s = new Date;
			return s.setTime(100 * Re.decode(e, t)), s
		}
	}
	class De {
		static encode(e, t) {
			let s = "";
			for(let n = 1; n <= t; n++) s += Me.encode(e.has(n));
			return s
		}
		static decode(e, t) {
			if(e.length !== t) throw new Ee("bitfield encoding length mismatch");
			const s = new Oe;
			for(let n = 1; n <= t; n++) Me.decode(e[n - 1]) && s.set(n);
			return s.bitLength = e.length, s
		}
	}
	class $e {
		static encode(e, t) {
			const s = (e = e.toUpperCase()).charCodeAt(0) - 65,
				n = e.charCodeAt(1) - 65;
			if(s < 0 || s > 25 || n < 0 || n > 25) throw new Ae(`invalid language code: ${e}`);
			if(t % 2 == 1) throw new Ae(`numBits must be even, ${t} is not valid`);
			t /= 2;
			return Re.encode(s, t) + Re.encode(n, t)
		}
		static decode(e, t) {
			let s;
			if(t !== e.length || e.length % 2) throw new Ee("invalid bit length for language"); {
				const t = 65,
					n = e.length / 2,
					o = Re.decode(e.slice(0, n), n) + t,
					r = Re.decode(e.slice(n), n) + t;
				s = String.fromCharCode(o) + String.fromCharCode(r)
			}
			return s
		}
	}
	class Ue {
		static encode(e) {
			let t = Re.encode(e.numRestrictions, Ne.numRestrictions);
			if(!e.isEmpty()) {
				const s = (t, s) => {
					for(let n = t + 1; n <= s; n++)
						if(e.gvl.vendorIds.has(n)) return n;return t
				};
				e.getRestrictions().forEach((n => {
					t += Re.encode(n.purposeId, Ne.purposeId),
					t += Re.encode(n.restrictionType, Ne.restrictionType);
					const o = e.getVendors(n),
						r = o.length;
					let i = 0,
						a = 0,
						c = "";
					for(let e = 0; e < r; e++) {
						const t = o[e];
						if(0 === a && (i++, a = t), e === r - 1 || o[e + 1] > s(t, o[r - 1])) {
							const e = !(t === a);
							c += Me.encode(e), c += Re.encode(a, Ne.vendorId), e && (c += Re.encode(t, Ne.vendorId)), a = 0
						}
					}
					t += Re.encode(i, Ne.numEntries),
					t += c
				}))
			}
			return t
		}
		static decode(e) {
			let t = 0;
			const s = new ke,
				n = Re.decode(e.substr(t, Ne.numRestrictions), Ne.numRestrictions);
			t += Ne.numRestrictions;
			for(let o = 0; o < n; o++) {
				const n = Re.decode(e.substr(t, Ne.purposeId), Ne.purposeId);
				t += Ne.purposeId;
				const o = Re.decode(e.substr(t, Ne.restrictionType), Ne.restrictionType);
				t += Ne.restrictionType;
				const r = new Ve(n, o),
					i = Re.decode(e.substr(t, Ne.numEntries), Ne.numEntries);
				t += Ne.numEntries;
				for(let n = 0; n < i; n++) {
					const n = Me.decode(e.substr(t, Ne.anyBoolean));
					t += Ne.anyBoolean;
					const o = Re.decode(e.substr(t, Ne.vendorId), Ne.vendorId);
					if(t += Ne.vendorId, n) {
						const n = Re.decode(e.substr(t, Ne.vendorId), Ne.vendorId);
						if(t += Ne.vendorId, n < o) throw new Ee(`Invalid RangeEntry: endVendorId ${n} is less than ${o}`);
						for(let e = o; e <= n; e++) s.add(e, r)
					} else s.add(o, r)
				}
			}
			return s.bitLength = t, s
		}
	}! function(e) {
		e[e.FIELD = 0] = "FIELD", e[e.RANGE = 1] = "RANGE"
	}(le || (le = {}));
	class Fe {
		static encode(e) {
			const t = [];
			let s, n = [],
				o = Re.encode(e.maxId, Ne.maxId),
				r = "";
			const i = Ne.maxId + Ne.encodingType,
				a = i + e.maxId,
				c = 2 * Ne.vendorId + Ne.singleOrRange + Ne.numEntries;
			let l = i + Ne.numEntries;
			return e.forEach(((o, i) => {
				if(r += Me.encode(o), s = e.maxId > c && l < a, s && o) {
					e.has(i + 1) ? 0 === n.length && (n.push(i), l += Ne.singleOrRange, l += Ne.vendorId) : (n.push(i), l += Ne.vendorId, t.push(n), n = [])
				}
			})), s ? (o += String(le.RANGE), o += this.buildRangeEncoding(t)) : (o += String(le.FIELD), o += r), o
		}
		static decode(e, t) {
			let s, n = 0;
			const o = Re.decode(e.substr(n, Ne.maxId), Ne.maxId);
			n += Ne.maxId;
			const r = Re.decode(e.charAt(n), Ne.encodingType);
			if(n += Ne.encodingType, r === le.RANGE) {
				if(s = new Oe, 1 === t) {
					if("1" === e.substr(n, 1)) throw new Ee("Unable to decode default consent=1");
					n++
				}
				const o = Re.decode(e.substr(n, Ne.numEntries), Ne.numEntries);
				n += Ne.numEntries;
				for(let t = 0; t < o; t++) {
					const t = Me.decode(e.charAt(n));
					n += Ne.singleOrRange;
					const o = Re.decode(e.substr(n, Ne.vendorId), Ne.vendorId);
					if(n += Ne.vendorId, t) {
						const t = Re.decode(e.substr(n, Ne.vendorId), Ne.vendorId);
						n += Ne.vendorId;
						for(let e = o; e <= t; e++) s.set(e)
					} else s.set(o)
				}
			} else {
				const t = e.substr(n, o);
				n += o, s = De.decode(t, o)
			}
			return s.bitLength = n, s
		}
		static buildRangeEncoding(e) {
			const t = e.length;
			let s = Re.encode(t, Ne.numEntries);
			return e.forEach((e => {
				const t = 1 === e.length;s += Me.encode(!t),
				s += Re.encode(e[0], Ne.vendorId),
				t || (s += Re.encode(e[1], Ne.vendorId))
			})), s
		}
	}

	function Ge() {
		return {
			[Le.version]: Re,
			[Le.created]: xe,
			[Le.lastUpdated]: xe,
			[Le.cmpId]: Re,
			[Le.cmpVersion]: Re,
			[Le.consentScreen]: Re,
			[Le.consentLanguage]: $e,
			[Le.vendorListVersion]: Re,
			[Le.policyVersion]: Re,
			[Le.isServiceSpecific]: Me,
			[Le.useNonStandardTexts]: Me,
			[Le.specialFeatureOptins]: De,
			[Le.purposeConsents]: De,
			[Le.purposeLegitimateInterests]: De,
			[Le.purposeOneTreatment]: Me,
			[Le.publisherCountryCode]: $e,
			[Le.vendorConsents]: Fe,
			[Le.vendorLegitimateInterests]: Fe,
			[Le.publisherRestrictions]: Ue,
			segmentType: Re,
			[Le.vendorsDisclosed]: Fe,
			[Le.vendorsAllowed]: Fe,
			[Le.publisherConsents]: De,
			[Le.publisherLegitimateInterests]: De,
			[Le.numCustomPurposes]: Re,
			[Le.publisherCustomConsents]: De,
			[Le.publisherCustomLegitimateInterests]: De
		}
	}
	class He {
		1 = {
			[ce.CORE]: [Le.version, Le.created, Le.lastUpdated, Le.cmpId, Le.cmpVersion, Le.consentScreen, Le.consentLanguage, Le.vendorListVersion, Le.purposeConsents, Le.vendorConsents]
		};
		2 = {
			[ce.CORE]: [Le.version, Le.created, Le.lastUpdated, Le.cmpId, Le.cmpVersion, Le.consentScreen, Le.consentLanguage, Le.vendorListVersion, Le.policyVersion, Le.isServiceSpecific, Le.useNonStandardTexts, Le.specialFeatureOptins, Le.purposeConsents, Le.purposeLegitimateInterests, Le.purposeOneTreatment, Le.publisherCountryCode, Le.vendorConsents, Le.vendorLegitimateInterests, Le.publisherRestrictions],
			[ce.PUBLISHER_TC]: [Le.publisherConsents, Le.publisherLegitimateInterests, Le.numCustomPurposes, Le.publisherCustomConsents, Le.publisherCustomLegitimateInterests],
			[ce.VENDORS_ALLOWED]: [Le.vendorsAllowed],
			[ce.VENDORS_DISCLOSED]: [Le.vendorsDisclosed]
		}
	}
	class je {
		1 = [ce.CORE];
		2 = [ce.CORE];
		constructor(e, t) {
			if(2 === e.version)
				if(e.isServiceSpecific) this[2].push(ce.PUBLISHER_TC);
				else {
					const s = !(!t || !t.isForVendors);
					s && !0 !== e[Le.supportOOB] || this[2].push(ce.VENDORS_DISCLOSED), s && (e[Le.supportOOB] && e[Le.vendorsAllowed].size > 0 && this[2].push(ce.VENDORS_ALLOWED), this[2].push(ce.PUBLISHER_TC))
				}
		}
	}
	class Be {
		static fieldSequence = new He;
		static encode(e, t) {
			let s;
			try {
				s = this.fieldSequence[String(e.version)][t]
			} catch(s) {
				throw new Ae(`Unable to encode version: ${e.version}, segment: ${t}`)
			}
			let n = "";
			t !== ce.CORE && (n = Re.encode(Pe.KEY_TO_ID[t], Ne.segmentType));
			const o = Ge();
			return s.forEach((s => {
				const r = e[s],
					i = o[s];
				let a = Ne[s];void 0 === a && this.isPublisherCustom(s) && (a = Number(e[Le.numCustomPurposes]));
				try {
					n += i.encode(r, a)
				} catch(e) {
					throw new Ae(`Error encoding ${t}->${s}: ${e.message}`)
				}
			})), _e.encode(n)
		}
		static decode(e, t, s) {
			const n = _e.decode(e);
			let o = 0;
			s === ce.CORE && (t.version = Re.decode(n.substr(o, Ne[Le.version]), Ne[Le.version])), s !== ce.CORE && (o += Ne.segmentType);
			const r = this.fieldSequence[String(t.version)][s],
				i = Ge();
			return r.forEach((e => {
				const s = i[e];
				let r = Ne[e];
				if(void 0 === r && this.isPublisherCustom(e) && (r = Number(t[Le.numCustomPurposes])), 0 !== r) {
					const i = n.substr(o, r);
					if(t[e] = s === Fe ? s.decode(i, t.version) : s.decode(i, r), Number.isInteger(r)) o += r;
					else {
						if(!Number.isInteger(t[e].bitLength)) throw new Ee(e);
						o += t[e].bitLength
					}
				}
			})), t
		}
		static isPublisherCustom(e) {
			return 0 === e.indexOf("publisherCustom")
		}
	}
	class Qe {
		static processor = [e => e, (e, t) => {
			e.publisherRestrictions.gvl = t,
			e.purposeLegitimateInterests.unset([1, 3, 4, 5, 6]);
			const s = new Map;
			return s.set("legIntPurposes", e.vendorLegitimateInterests),
			s.set("purposes", e.vendorConsents),
			s.forEach(((s, n) => {
				s.forEach(((o, r) => {
					if(o) {
						const o = t.vendors[r];
						if(!o || o.deletedDate) s.unset(r);
						else if(0 === o[n].length)
							if("legIntPurposes" === n && 0 === o.purposes.length && 0 === o.legIntPurposes.length && o.specialPurposes.length > 0);
							else if(e.isServiceSpecific)
							if(0 === o.flexiblePurposes.length) s.unset(r);
							else {
								const t = e.publisherRestrictions.getRestrictions(r);
								let o = !1;
								for(let e = 0, s = t.length; e < s && !o; e++) o = t[e].restrictionType === ie.REQUIRE_CONSENT && "purposes" === n || t[e].restrictionType === ie.REQUIRE_LI && "legIntPurposes" === n;
								o || s.unset(r)
							} else s.unset(r)
					}
				}))
			})),
			e.vendorsDisclosed.set(t.vendors),
			e
		}];
		static process(e, t) {
			const s = e.gvl;
			if(!s) throw new Ae("Unable to encode TCModel without a GVL");
			if(!s.isReady) throw new Ae("Unable to encode TCModel tcModel.gvl.readyPromise is not resolved");
			(e = e.clone()).consentLanguage = s.language.slice(0, 2).toUpperCase(), t ? .version > 0 && t ? .version <= this.processor.length ? e.version = t.version : e.version = this.processor.length;
			const n = e.version - 1;
			if(!this.processor[n]) throw new Ae(`Invalid version: ${e.version}`);
			return this.processor[n](e, s)
		}
	}
	class qe extends Te {
		static LANGUAGE_CACHE = new Map;
		static CACHE = new Map;
		static LATEST_CACHE_KEY = 0;
		static DEFAULT_LANGUAGE = "EN";
		static consentLanguages = new Ie;
		static baseUrl_;
		static set baseUrl(e) {
			if(/^https?:\/\/vendorlist\.consensu\.org\//.test(e)) throw new Se("Invalid baseUrl!  You may not pull directly from vendorlist.consensu.org and must provide your own cache");
			e.length > 0 && "/" !== e[e.length - 1] && (e += "/"), this.baseUrl_ = e
		}
		static get baseUrl() {
			return this.baseUrl_
		}
		static latestFilename = "vendor-list.json";
		static versionedFilename = "archives/vendor-list-v[VERSION].json";
		static languageFilename = "purposes-[LANG].json";
		readyPromise;
		gvlSpecificationVersion;
		vendorListVersion;
		tcfPolicyVersion;
		lastUpdated;
		purposes;
		specialPurposes;
		features;
		specialFeatures;
		isReady_ = !1;
		vendors_;
		vendorIds;
		fullVendorList;
		byPurposeVendorMap;
		bySpecialPurposeVendorMap;
		byFeatureVendorMap;
		bySpecialFeatureVendorMap;
		stacks;
		dataCategories;
		lang_;
		cacheLang_;
		isLatest = !1;
		constructor(e) {
			super();
			let t = qe.baseUrl;
			if(this.lang_ = qe.DEFAULT_LANGUAGE, this.cacheLang_ = qe.DEFAULT_LANGUAGE, this.isVendorList(e)) this.populate(e), this.readyPromise = Promise.resolve();
			else {
				if(!t) throw new Se("must specify GVL.baseUrl before loading GVL json");
				if(e > 0) {
					const s = e;
					qe.CACHE.has(s) ? (this.populate(qe.CACHE.get(s)), this.readyPromise = Promise.resolve()) : (t += qe.versionedFilename.replace("[VERSION]", String(s)), this.readyPromise = this.fetchJson(t))
				} else qe.CACHE.has(qe.LATEST_CACHE_KEY) ? (this.populate(qe.CACHE.get(qe.LATEST_CACHE_KEY)), this.readyPromise = Promise.resolve()) : (this.isLatest = !0, this.readyPromise = this.fetchJson(t + qe.latestFilename))
			}
		}
		static emptyLanguageCache(e) {
			let t = !1;
			return null == e && qe.LANGUAGE_CACHE.size > 0 ? (qe.LANGUAGE_CACHE = new Map, t = !0) : "string" == typeof e && this.consentLanguages.has(e.toUpperCase()) && (qe.LANGUAGE_CACHE.delete(e.toUpperCase()), t = !0), t
		}
		static emptyCache(e) {
			let t = !1;
			return Number.isInteger(e) && e >= 0 ? (qe.CACHE.delete(e), t = !0) : void 0 === e && (qe.CACHE = new Map, t = !0), t
		}
		cacheLanguage() {
			qe.LANGUAGE_CACHE.has(this.cacheLang_) || qe.LANGUAGE_CACHE.set(this.cacheLang_, {
				purposes: this.purposes,
				specialPurposes: this.specialPurposes,
				features: this.features,
				specialFeatures: this.specialFeatures,
				stacks: this.stacks,
				dataCategories: this.dataCategories
			})
		}
		async fetchJson(e) {
			try {
				this.populate(await class {
					static absCall(e, t, s, n) {
						return new Promise(((o, r) => {
							const i = new XMLHttpRequest;i.withCredentials = s,
							i.addEventListener("load", (() => {
								if(i.readyState == XMLHttpRequest.DONE)
									if(i.status >= 200 && i.status < 300) {
										let e = i.response;
										if("string" == typeof e) try {
											e = JSON.parse(e)
										} catch(e) {}
										o(e)
									} else r(new Error(`HTTP Status: ${i.status} response type: ${i.responseType}`))
							})),
							i.addEventListener("error", (() => {
								r(new Error("error"))
							})),
							i.addEventListener("abort", (() => {
								r(new Error("aborted"))
							})),
							null === t ? i.open("GET", e, !0) : i.open("POST", e, !0),
							i.responseType = "json",
							i.timeout = n,
							i.ontimeout = () => {
								r(new Error("Timeout " + n + "ms " + e))
							},
							i.send(t)
						}))
					}
					static post(e, t, s = !1, n = 0) {
						return this.absCall(e, JSON.stringify(t), s, n)
					}
					static fetch(e, t = !1, s = 0) {
						return this.absCall(e, null, t, s)
					}
				}.fetch(e))
			} catch(e) {
				throw new Se(e.message)
			}
		}
		getJson() {
			return JSON.parse(JSON.stringify({
				gvlSpecificationVersion: this.gvlSpecificationVersion,
				vendorListVersion: this.vendorListVersion,
				tcfPolicyVersion: this.tcfPolicyVersion,
				lastUpdated: this.lastUpdated,
				purposes: this.purposes,
				specialPurposes: this.specialPurposes,
				features: this.features,
				specialFeatures: this.specialFeatures,
				stacks: this.stacks,
				dataCategories: this.dataCategories,
				vendors: this.fullVendorList
			}))
		}
		async changeLanguage(e) {
			let t = e;
			try {
				t = qe.consentLanguages.parseLanguage(e)
			} catch(e) {
				throw new Se("Error during parsing the language: " + e.message)
			}
			const s = e.toUpperCase();
			if((t.toLowerCase() !== qe.DEFAULT_LANGUAGE.toLowerCase() || qe.LANGUAGE_CACHE.has(s)) && t !== this.lang_)
				if(this.lang_ = t, qe.LANGUAGE_CACHE.has(s)) {
					const e = qe.LANGUAGE_CACHE.get(s);
					for(const t in e) e.hasOwnProperty(t) && (this[t] = e[t])
				} else {
					const e = qe.baseUrl + qe.languageFilename.replace("[LANG]", this.lang_.toLowerCase());
					try {
						await this.fetchJson(e), this.cacheLang_ = s, this.cacheLanguage()
					} catch(e) {
						throw new Se("unable to load language: " + e.message)
					}
				}
		}
		get language() {
			return this.lang_
		}
		isVendorList(e) {
			return void 0 !== e && void 0 !== e.vendors
		}
		populate(e) {
			this.purposes = e.purposes, this.specialPurposes = e.specialPurposes, this.features = e.features, this.specialFeatures = e.specialFeatures, this.stacks = e.stacks, this.dataCategories = e.dataCategories, this.isVendorList(e) && (this.gvlSpecificationVersion = e.gvlSpecificationVersion, this.tcfPolicyVersion = e.tcfPolicyVersion, this.vendorListVersion = e.vendorListVersion, this.lastUpdated = e.lastUpdated, "string" == typeof this.lastUpdated && (this.lastUpdated = new Date(this.lastUpdated)), this.vendors_ = e.vendors, this.fullVendorList = e.vendors, this.mapVendors(), this.isReady_ = !0, this.isLatest && qe.CACHE.set(qe.LATEST_CACHE_KEY, this.getJson()), qe.CACHE.has(this.vendorListVersion) || qe.CACHE.set(this.vendorListVersion, this.getJson())), this.cacheLanguage()
		}
		mapVendors(e) {
			this.byPurposeVendorMap = {}, this.bySpecialPurposeVendorMap = {}, this.byFeatureVendorMap = {}, this.bySpecialFeatureVendorMap = {}, Object.keys(this.purposes).forEach((e => {
				this.byPurposeVendorMap[e] = {
					legInt: new Set,
					consent: new Set,
					flexible: new Set
				}
			})), Object.keys(this.specialPurposes).forEach((e => {
				this.bySpecialPurposeVendorMap[e] = new Set
			})), Object.keys(this.features).forEach((e => {
				this.byFeatureVendorMap[e] = new Set
			})), Object.keys(this.specialFeatures).forEach((e => {
				this.bySpecialFeatureVendorMap[e] = new Set
			})), Array.isArray(e) || (e = Object.keys(this.fullVendorList).map((e => +e))), this.vendorIds = new Set(e), this.vendors_ = e.reduce(((e, t) => {
				const s = this.vendors_[String(t)];
				return s && void 0 === s.deletedDate && (s.purposes.forEach((e => {
					this.byPurposeVendorMap[String(e)].consent.add(t)
				})), s.specialPurposes.forEach((e => {
					this.bySpecialPurposeVendorMap[String(e)].add(t)
				})), s.legIntPurposes.forEach((e => {
					this.byPurposeVendorMap[String(e)].legInt.add(t)
				})), s.flexiblePurposes && s.flexiblePurposes.forEach((e => {
					this.byPurposeVendorMap[String(e)].flexible.add(t)
				})), s.features.forEach((e => {
					this.byFeatureVendorMap[String(e)].add(t)
				})), s.specialFeatures.forEach((e => {
					this.bySpecialFeatureVendorMap[String(e)].add(t)
				})), e[t] = s),
				e
			}), {})
		}
		getFilteredVendors(e, t, s, n) {
			const o = e.charAt(0).toUpperCase() + e.slice(1);
			let r;
			const i = {};
			return r = "purpose" === e && s ? this["by" + o + "VendorMap"][String(t)][s] : this["by" + (n ? "Special" : "") + o + "VendorMap"][String(t)], r.forEach((e => {
				i[String(e)] = this.vendors[String(e)]
			})), i
		}
		getVendorsWithConsentPurpose(e) {
			return this.getFilteredVendors("purpose", e, "consent")
		}
		getVendorsWithLegIntPurpose(e) {
			return this.getFilteredVendors("purpose", e, "legInt")
		}
		getVendorsWithFlexiblePurpose(e) {
			return this.getFilteredVendors("purpose", e, "flexible")
		}
		getVendorsWithSpecialPurpose(e) {
			return this.getFilteredVendors("purpose", e, void 0, !0)
		}
		getVendorsWithFeature(e) {
			return this.getFilteredVendors("feature", e)
		}
		getVendorsWithSpecialFeature(e) {
			return this.getFilteredVendors("feature", e, void 0, !0)
		}
		get vendors() {
			return this.vendors_
		}
		narrowVendorsTo(e) {
			this.mapVendors(e)
		}
		get isReady() {
			return this.isReady_
		}
		clone() {
			const e = new qe(this.getJson());
			return this.lang_ !== qe.DEFAULT_LANGUAGE && e.changeLanguage(this.lang_), e
		}
		static isInstanceOf(e) {
			return "object" == typeof e && "function" == typeof e.narrowVendorsTo
		}
	}
	class ze extends Te {
		static consentLanguages = qe.consentLanguages;
		isServiceSpecific_ = !1;
		supportOOB_ = !0;
		useNonStandardTexts_ = !1;
		purposeOneTreatment_ = !1;
		publisherCountryCode_ = "AA";
		version_ = 2;
		consentScreen_ = 0;
		policyVersion_ = 4;
		consentLanguage_ = "EN";
		cmpId_ = 0;
		cmpVersion_ = 0;
		vendorListVersion_ = 0;
		numCustomPurposes_ = 0;
		gvl_;
		created;
		lastUpdated;
		specialFeatureOptins = new Oe;
		purposeConsents = new Oe;
		purposeLegitimateInterests = new Oe;
		publisherConsents = new Oe;
		publisherLegitimateInterests = new Oe;
		publisherCustomConsents = new Oe;
		publisherCustomLegitimateInterests = new Oe;
		customPurposes;
		vendorConsents = new Oe;
		vendorLegitimateInterests = new Oe;
		vendorsDisclosed = new Oe;
		vendorsAllowed = new Oe;
		publisherRestrictions = new ke;
		constructor(e) {
			super(), e && (this.gvl = e), this.updated()
		}
		set gvl(e) {
			qe.isInstanceOf(e) || (e = new qe(e)), this.gvl_ = e, this.publisherRestrictions.gvl = e
		}
		get gvl() {
			return this.gvl_
		}
		set cmpId(e) {
			if(e = Number(e), !(Number.isInteger(e) && e > 1)) throw new Ce("cmpId", e);
			this.cmpId_ = e
		}
		get cmpId() {
			return this.cmpId_
		}
		set cmpVersion(e) {
			if(e = Number(e), !(Number.isInteger(e) && e > -1)) throw new Ce("cmpVersion", e);
			this.cmpVersion_ = e
		}
		get cmpVersion() {
			return this.cmpVersion_
		}
		set consentScreen(e) {
			if(e = Number(e), !(Number.isInteger(e) && e > -1)) throw new Ce("consentScreen", e);
			this.consentScreen_ = e
		}
		get consentScreen() {
			return this.consentScreen_
		}
		set consentLanguage(e) {
			this.consentLanguage_ = e
		}
		get consentLanguage() {
			return this.consentLanguage_
		}
		set publisherCountryCode(e) {
			if(!/^([A-z]){2}$/.test(e)) throw new Ce("publisherCountryCode", e);
			this.publisherCountryCode_ = e.toUpperCase()
		}
		get publisherCountryCode() {
			return this.publisherCountryCode_
		}
		set vendorListVersion(e) {
			if((e = Number(e) >> 0) < 0) throw new Ce("vendorListVersion", e);
			this.vendorListVersion_ = e
		}
		get vendorListVersion() {
			return this.gvl ? this.gvl.vendorListVersion : this.vendorListVersion_
		}
		set policyVersion(e) {
			if(this.policyVersion_ = parseInt(e, 10), this.policyVersion_ < 0) throw new Ce("policyVersion", e)
		}
		get policyVersion() {
			return this.gvl ? this.gvl.tcfPolicyVersion : this.policyVersion_
		}
		set version(e) {
			this.version_ = parseInt(e, 10)
		}
		get version() {
			return this.version_
		}
		set isServiceSpecific(e) {
			this.isServiceSpecific_ = e
		}
		get isServiceSpecific() {
			return this.isServiceSpecific_
		}
		set useNonStandardTexts(e) {
			this.useNonStandardTexts_ = e
		}
		get useNonStandardTexts() {
			return this.useNonStandardTexts_
		}
		set supportOOB(e) {
			this.supportOOB_ = e
		}
		get supportOOB() {
			return this.supportOOB_
		}
		set purposeOneTreatment(e) {
			this.purposeOneTreatment_ = e
		}
		get purposeOneTreatment() {
			return this.purposeOneTreatment_
		}
		setAllVendorConsents() {
			this.vendorConsents.set(this.gvl.vendors)
		}
		unsetAllVendorConsents() {
			this.vendorConsents.empty()
		}
		setAllVendorsDisclosed() {
			this.vendorsDisclosed.set(this.gvl.vendors)
		}
		unsetAllVendorsDisclosed() {
			this.vendorsDisclosed.empty()
		}
		setAllVendorsAllowed() {
			this.vendorsAllowed.set(this.gvl.vendors)
		}
		unsetAllVendorsAllowed() {
			this.vendorsAllowed.empty()
		}
		setAllVendorLegitimateInterests() {
			this.vendorLegitimateInterests.set(this.gvl.vendors)
		}
		unsetAllVendorLegitimateInterests() {
			this.vendorLegitimateInterests.empty()
		}
		setAllPurposeConsents() {
			this.purposeConsents.set(this.gvl.purposes)
		}
		unsetAllPurposeConsents() {
			this.purposeConsents.empty()
		}
		setAllPurposeLegitimateInterests() {
			this.purposeLegitimateInterests.set(this.gvl.purposes)
		}
		unsetAllPurposeLegitimateInterests() {
			this.purposeLegitimateInterests.empty()
		}
		setAllSpecialFeatureOptins() {
			this.specialFeatureOptins.set(this.gvl.specialFeatures)
		}
		unsetAllSpecialFeatureOptins() {
			this.specialFeatureOptins.empty()
		}
		setAll() {
			this.setAllVendorConsents(), this.setAllPurposeLegitimateInterests(), this.setAllSpecialFeatureOptins(), this.setAllPurposeConsents(), this.setAllVendorLegitimateInterests()
		}
		unsetAll() {
			this.unsetAllVendorConsents(), this.unsetAllPurposeLegitimateInterests(), this.unsetAllSpecialFeatureOptins(), this.unsetAllPurposeConsents(), this.unsetAllVendorLegitimateInterests()
		}
		get numCustomPurposes() {
			let e = this.numCustomPurposes_;
			if("object" == typeof this.customPurposes) {
				const t = Object.keys(this.customPurposes).sort(((e, t) => Number(e) - Number(t)));
				e = parseInt(t.pop(), 10)
			}
			return e
		}
		set numCustomPurposes(e) {
			if(this.numCustomPurposes_ = parseInt(e, 10), this.numCustomPurposes_ < 0) throw new Ce("numCustomPurposes", e)
		}
		updated() {
			const e = new Date,
				t = new Date(Date.UTC(e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDate()));
			this.created = t, this.lastUpdated = t
		}
	}
	class Ke extends de {
		respond() {
			const e = he.tcModel,
				t = e.vendorListVersion;
			let s;
			void 0 === this.param && (this.param = t), s = this.param === t && e.gvl ? e.gvl : new qe(this.param), s.readyPromise.then((() => {
				this.invokeCallback(s.getJson())
			}))
		}
	}
	class Je extends pe {
		respond() {
			this.listenerId = he.eventQueue.add({
				callback: this.callback,
				param: this.param,
				next: this.next
			}), super.respond()
		}
	}
	class We extends de {
		respond() {
			this.invokeCallback(he.eventQueue.remove(this.param))
		}
	}
	class Ye {
		static[se.PING] = be;
		static[se.GET_TC_DATA] = pe;
		static[se.GET_IN_APP_TC_DATA] = we;
		static[se.GET_VENDOR_LIST] = Ke;
		static[se.ADD_EVENT_LISTENER] = Je;
		static[se.REMOVE_EVENT_LISTENER] = We
	}
	class Ze {
		static set_ = new Set([0, 2, void 0, null]);
		static has(e) {
			return "string" == typeof e && (e = Number(e)), this.set_.has(e)
		}
	}
	class Xe {
		callQueue;
		customCommands;
		constructor(e) {
			if(e) {
				let t = se.ADD_EVENT_LISTENER;
				if(e ? .[t]) throw new Error(`Built-In Custom Commmand for ${t} not allowed: Use ${se.GET_TC_DATA} instead`);
				if(t = se.REMOVE_EVENT_LISTENER, e ? .[t]) throw new Error(`Built-In Custom Commmand for ${t} not allowed`);
				e ? .[se.GET_TC_DATA] && (e[se.ADD_EVENT_LISTENER] = e[se.GET_TC_DATA], e[se.REMOVE_EVENT_LISTENER] = e[se.GET_TC_DATA]), this.customCommands = e
			}
			try {
				this.callQueue = window.__tcfapi() || []
			} catch(e) {
				this.callQueue = []
			} finally {
				window.__tcfapi = this.apiCall.bind(this), this.purgeQueuedCalls()
			}
		}
		apiCall(e, t, s, ...n) {
			if("string" != typeof e) s(null, !1);
			else if(Ze.has(t)) {
				if("function" != typeof s) throw new Error("invalid callback function");
				he.disabled ? s(new ge, !1) : this.isCustomCommand(e) || this.isBuiltInCommand(e) ? this.isCustomCommand(e) && !this.isBuiltInCommand(e) ? this.customCommands[e](s, ...n) : e === se.PING ? this.isCustomCommand(e) ? new Ye[e](this.customCommands[e], n[0], null, s) : new Ye[e](s, n[0]) : void 0 === he.tcModel ? this.callQueue.push([e, t, s, ...n]) : this.isCustomCommand(e) && this.isBuiltInCommand(e) ? new Ye[e](this.customCommands[e], n[0], null, s) : new Ye[e](s, n[0]) : s(null, !1)
			} else s(null, !1)
		}
		purgeQueuedCalls() {
			const e = this.callQueue;
			this.callQueue = [], e.forEach((e => {
				window.__tcfapi(...e)
			}))
		}
		isCustomCommand(e) {
			return this.customCommands && "function" == typeof this.customCommands[e]
		}
		isBuiltInCommand(e) {
			return void 0 !== Ye[e]
		}
	}
	const et = new class {
			callResponder;
			isServiceSpecific;
			numUpdates = 0;
			constructor(e, t, s = !1, n) {
				this.throwIfInvalidInt(e, "cmpId", 2), this.throwIfInvalidInt(t, "cmpVersion", 0), he.cmpId = e, he.cmpVersion = t, he.tcfPolicyVersion = 4, this.isServiceSpecific = !!s, this.callResponder = new Xe(n)
			}
			throwIfInvalidInt(e, t, s) {
				if(!("number" == typeof e && Number.isInteger(e) && e >= s)) throw new Error(`Invalid ${t}: ${e}`)
			}
			update(e, t = !1) {
				if(he.disabled) throw new Error("CmpApi Disabled");
				he.cmpStatus = ne.LOADED, t ? (he.displayStatus = oe.VISIBLE, he.eventStatus = re.CMP_UI_SHOWN) : void 0 === he.tcModel ? (he.displayStatus = oe.DISABLED, he.eventStatus = re.TC_LOADED) : (he.displayStatus = oe.HIDDEN, he.eventStatus = re.USER_ACTION_COMPLETE), he.gdprApplies = null !== e, he.gdprApplies ? ("" === e ? (he.tcModel = new ze, he.tcModel.cmpId = he.cmpId, he.tcModel.cmpVersion = he.cmpVersion) : he.tcModel = class {
					static encode(e, t) {
						let s, n = "";
						return e = Qe.process(e, t), s = Array.isArray(t ? .segments) ? t.segments : new je(e, t)["" + e.version], s.forEach(((t, o) => {
							let r = "";o < s.length - 1 && (r = "."),
							n += Be.encode(e, t) + r
						})), n
					}
					static decode(e, t) {
						const s = e.split("."),
							n = s.length;
						t || (t = new ze);
						for(let e = 0; e < n; e++) {
							const n = s[e],
								o = _e.decode(n.charAt(0)).substr(0, Ne.segmentType),
								r = Pe.ID_TO_KEY[Re.decode(o, Ne.segmentType).toString()];
							Be.decode(n, t, r)
						}
						return t
					}
				}.decode(e), he.tcModel.isServiceSpecific = this.isServiceSpecific, he.tcfPolicyVersion = Number(he.tcModel.policyVersion), he.tcString = e) : he.tcModel = null, 0 === this.numUpdates ? this.callResponder.purgeQueuedCalls() : he.eventQueue.exec(), this.numUpdates++
			}
			disable() {
				he.disabled = !0, he.cmpStatus = ne.ERROR
			}
		}(371, 1, !0),
		tt = new Event("gdprConsentGiven"),
		st = new Event("gdprConsentFirstGiven");
	var nt = e => {
			tt.purposes = e,
			document.dispatchEvent(tt)
		},
		ot = e => {
			st.purposes = e,
			document.dispatchEvent(st)
		};
	const rt = (e, t) => {
		if(null === document.querySelector(`style[data-gdpr-key="${e}"]`)) {
			const s = document.createElement("style");
			s.setAttribute("data-gdpr-key", e), s.innerHTML = t, document.head.appendChild(s)
		}
	};
	const it = e => {
			if(!0 === function(e) {
					return "SCRIPT" === e.tagName
				}(e)) e.parentNode.replaceChild(function(e) {
				const t = document.createElement("script");
				t.text = e.innerHTML;
				let s = 0;
				const n = e.attributes;
				let o;
				for(; s < n.length;) t.setAttribute((o = n[s]).name, o.value), s += 1;
				return t
			}(e), e);
			else {
				let t = 0;
				const s = e.childNodes;
				for(; t < s.length;) it(s[t]), t += 1
			}
			return e
		},
		at = e => {
			const t = (e => {
				const t = document.createElement("div");
				return t.innerHTML = e.trim(),
				t.firstChild
			})(e);
			return document.body.appendChild(t),
			t
		},
		ct = e => {
			document.querySelectorAll(e).forEach((e => {
				e.parentNode.removeChild(e)
			}))
		},
		lt = e => {
			e ? document.querySelectorAll("html,body").forEach((e => {
				e.classList.add("popin-gdpr-no-scroll")
			})) : document.querySelectorAll("html,body").forEach((e => {
				e.classList.remove("popin-gdpr-no-scroll")
			}))
		},
		dt = () => {
			const {
				applicationVars: e
			} = window.lmd || {};
			return e ? {
				platformName: e.platformName ? String(e.platformName) : null,
				platformVersion: e.platformVersion ? String(e.platformVersion) : null,
				deviceType: e.deviceType ? String(e.deviceType) : null,
				appVersion: e.appVersion ? String(e.appVersion) : null,
				appName: (h.content || {}).analyticsName || null
			} : {}
		},
		pt = J();
	let ut = null,
		ht = null;
	const mt = {
			analytics: !1,
			ads: !1,
			personalization: !1,
			mediaPlatforms: !1,
			social: !1
		},
		gt = {
			ads: 5,
			analytics: 2,
			personalization: 4,
			mediaPlatforms: !1,
			social: 3
		},
		ft = () => {
			if(void 0 !== h.consent && void 0 !== h.consent.lmdConsent) return h.consent.lmdConsent;
			if(!ut && (l(`get consent from cookie ${Q()}`), ut = pt.get(Q()), ut && "telerama" === h.identifier)) {
				bt().ads || wt() < (Date.now() - 2592e6) / 1e3 && (ut = null, h.modules.standard.tpl = "/html/telerama/wall.html")
			}
			return ut
		},
		vt = () => void 0 !== h.consent && void 0 !== h.consent.consentString ? h.consent.consentString : (ht || (l(`get tcf consent string from cookie ${z()}`), ht = pt.get(z())), ht),
		yt = () => !!ft() && !!vt(),
		bt = () => yt() ? ft().purposes : mt,
		wt = () => yt() && ft().timestamp || !1,
		Et = () => {
			const e = wt();
			if(e) {
				const t = new Date(1e3 * e);
				return `Le ${t.toLocaleDateString()} à ${t.toLocaleTimeString()}`
			}
			return !1
		},
		At = () => yt() && ft().userId || !1,
		St = e => {
			const t = {
				displayMode: h.displayMode,
				template: h.modules[h.displayMode].tpl,
				entryPoint: h.entryPoint,
				debug: i(),
				...dt()
			};
			"string" == typeof e ? t.expression = e : (t.expression = "partial", t.purposes = e);
			let s = `https://${h.hosts.cmp}/api/consent`;
			return "" !== h.cookiePrefix && (s = `${s}?cp=${h.cookiePrefix}`),
			fetch(s, {
				credentials: "include",
				method: "post",
				headers: {
					Accept: "application/json",
					"Content-Type": "application/json"
				},
				body: JSON.stringify(t)
			}).then((e => e.json())).then((e => (et.update(e.consentString, !1), e)))
		},
		Ct = e => {
			St("acceptAll").then((() => {
				"function" == typeof e && e(),
				Lt(),
				nt(bt()),
				ot(bt())
			}))
		},
		_t = e => {
			St("denyAll").then((() => {
				"function" == typeof e && e(),
				Lt(),
				nt(bt()),
				ot(bt())
			}))
		},
		It = (e, t) => {
			e.hasAttribute(t) && (e.setAttribute("type", "text/javascript"), e.setAttribute("src", e.getAttribute(t)), e.removeAttribute(t))
		},
		Lt = () => {
			l("loadContent");
			const e = bt();e.essential = !0,
			"object" == typeof e && Object.keys(e).forEach((t => {!0 === e[t] && (e => {
					if(e) {
						const t = document.querySelectorAll(`[data-iub-purposes="${e}"]`);
						for(let e = 0; e < t.length; e += 1) It(t[e], "data-suppressedsrc")
					}
				})(gt[t] || !1);
				const s = document.querySelectorAll(`[data-gdpr-purposes="${t}"]`);
				let n, o;
				for(l(`Find ${s.length} node(s) for purpose ${t}`), n = 0; n < s.length; n += 1) o = s[n],
				o.hasAttribute("data-gdpr-src") && !0 === e[t] && ("huffpost" === h.identifier && o.getAttribute("data-gdpr-src").indexOf("https://www.googletagmanager.com/gtag/js") > -1 ? o.setAttribute("data-gdpr-warning", "Script blacklisted by CMP - loading abort") : It(o, "data-gdpr-src")),
				o.hasAttribute("data-gdpr-no-consent-src") && !1 === e[t] && It(o, "data-gdpr-no-consent-src"),
				o.hasAttribute("data-gdpr-inline") && !0 === e[t] && ("huffpost" === h.identifier && o.innerHTML.indexOf("https://www.google-analytics.com/analytics.js") > -1 ? o.innerHTML = `/* Inline script blacklisted by CMP - loading abort */\n            ${o.innerHTML}` : (o.setAttribute("type", "application/javascript"), it(o)))
			}))
		},
		Tt = ["Botify", "Mozilla/5.0 (compatible; botify; http://botify.com)", "Mozilla/5.0 Mobile (compatible; botify; http://botify.com)", "APIs-Google (+https://developers.google.com/webmasters/APIs-Google.html)", "Mediapartners-Google", "Mozilla/5.0 (Linux ; Android 5.0 ; SM-G920A) AppleWebKit (KHTML, like Gecko) Chrome Mobile Safari (compatible ; AdsBot-Google-Mobile ; +http://www.google.com/mobile/adsbot.html)", "Mozilla/5.0 (iPhone ; CPU iPhone OS 9_1, like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1 (compatible ; AdsBot-Google-Mobile ; +http://www.google.com/mobile/adsbot.html)", "AdsBot-Google (+http://www.google.com/adsbot.html)", "Googlebot-Image/1.0", "Googlebot-News", "Googlebot-Video/1.0", "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "Googlebot/2.1 (+http://www.google.com/bot.html)", "(compatible; Mediapartners-Google/2.1; +http://www.google.com/bot.html)", "AdsBot-Google-Mobile-Apps", "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.118 Safari/537.36 (compatible; Google-Read-Aloud;  +https://support.google.com/webmasters/answer/1061943)", "Mozilla/5.0 (Linux; Android 7.0; SM-G930V Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.125 Mobile Safari/537.36 (compatible; Google-Read-Aloud; +https://support.google.com/webmasters/answer/1061943)", "Mozilla/5.0 (Linux; Android 4.2.1; en-us; Nexus 5 Build/JOP40D) AppleWebKit/535.19 (KHTML, like Gecko; googleweblight) Chrome/38.0.1025.166 Mobile Safari/535.19", "Mozilla/5.0 (compatible; Qwant-news/2.0; +https://www.qwant.com/)"],
		Vt = ["compatible; Googlebot/2.1; +http://www.google.com/bot.html", "GTmetrix", "Google Page Speed", "DareBoost", "Chrome-Lighthouse", "PTST"];
	var kt = () => Tt.indexOf(navigator.userAgent) > -1 || !!Vt.some((e => navigator.userAgent.indexOf(e) > -1));
	const Pt = (e, t, s, n) => {
		let o, r = "";

		function i(e, t) {
			return e = null != (e = e[(t = t.pop ? t : t.split(".")).shift()]) ? e : "", 0 in t ? i(e, t) : e
		}
		t = Array.isArray(t) ? t : t ? [t] : [],
		t = n ? 0 in t ? [] : [1] : t;
		for(o = 0; o < t.length; o++) {
			let n, a = "",
				c = 0,
				l = "object" == typeof t[o] ? t[o] : {};
			l = {...s,
				...l
			}, l[""] = {
				"": t[o]
			}, e.replace(/([\s\S]*?)({{((\/)|(\^)|#)(.*?)}}|$)/g, ((e, t, s, o, d, p, u) => {
				c ? a += c && !d || c > 1 ? e : t : (r += t.replace(/{{{(.*?)}}}|{{(!?)(&?)(>?)(.*?)}}/g, ((e, t, s, n, o, r) => t ? i(l, t) : n ? i(l, r) : o ? Pt(i(l, r), l) : s ? "" : new Option(i(l, r)).innerHTML)), n = p),
				d ? --c || (u = i(l, u), /^f/.test(typeof u) ? r += u.call(l, a, (e => Pt(e, l))) : r += Pt(a, u, l, n), a = "") : ++c
			}))
		}
		return r
	};
	var Ot = {
		totalVendor: 169,
		totalVendorByFeature: {
			1: 96,
			2: 93,
			3: 104
		},
		totalVendorByPurpose: {
			1: 153,
			2: 87,
			3: 116,
			4: 113,
			5: 46,
			6: 39,
			7: 91,
			8: 38,
			9: 73,
			10: 77,
			11: 12
		},
		totalVendorBySpecialFeature: {
			1: 56,
			2: 18
		},
		totalVendorBySpecialPurpose: {
			1: 114,
			2: 104
		}
	};
	const Nt = e => {
			const t = h.content || {};
			return t.hosts = h.hosts,
			t.siteName = t.siteName || "",
			t.deName = t.deName || `de ${t.siteName}`,
			t.aName = t.aName || `à ${t.siteName}`,
			t.hasIdentity = !!At() && !!wt() && !!Et(),
			t.consent = {
				userId: At(),
				timestamp: wt(),
				date: Et()
			},
			t.displayVendor = Ot,
			Object.keys(t.vendors || {}).forEach((e => {
				t.vendors[`has${e.charAt(0).toUpperCase()}${e.slice(1)}`] = !0
			})),
			Pt(e, t)
		},
		Mt = (e, t) => {
			const s = [],
				n = h.lang || "fr",
				o = {
					fr: {
						day: "jour",
						days: "jours",
						second: "seconde",
						retentionTitle: "Durée de rétention standard"
					},
					en: {
						day: "day",
						days: "days",
						second: "second",
						retentionTitle: "Standard retention duration"
					}
				},
				r = (e, t, s = {}) => e.map((e => {
					let r = t[e].name;
					if(0 === s[e] || s[e]) {
						const i = 0 === s[e] || 1 === s[e] ? o[n].day : o[n].days;
						r = `${t[e].name} (${s[e]} ${i})`
					}
					return r
				}));
			return Object.values(t).sort(((e, t) => {
				const s = e.name.toLowerCase(),
					n = t.name.toLowerCase();
				return s < n ? -1 : s > n ? 1 : 0
			})).forEach((t => {
				t.cookieDuration = t.cookieMaxAgeSeconds > 0 && (e => {
					let t, s;
					return e >= 31536e3 ? (t = Math.round(e / 3600 / 24 / 365), s = "an") : e >= 86400 ? (t = Math.round(e / 3600 / 24), s = "jour") : e >= 3600 ? (t = Math.round(e / 3600), s = "heure") : e >= 60 ? (t = Math.round(e / 60), s = "minute") : (t = e, s = "seconde"),
					t > 1 && (s += "s"),
					`${t} ${s}`
				})(t.cookieMaxAgeSeconds),
				t.cookieDurationSeconds = `${t.cookieMaxAgeSeconds} ${o[n].second}`,
				t.cookieMaxAgeSeconds > 1 && (t.cookieDurationSeconds += "s"),
				t.hasUses = t.usesCookies || t.usesNonCookieAccess;
				const i = t ? .dataRetention ? .stdRetention;
				if(t.hasRetention = i > 0, t.hasRetention) {
					const e = 1 === i ? o[n].day : o[n].days;
					t.standardRetention = `${o[n].retentionTitle} : ${i} ${e}`
				}
				t.hasPurposes = t.purposes.length > 0 || t.legIntPurposes.length > 0,
				t.purposesList = r(t.purposes, e.purposes, t ? .dataRetention ? .purposes),
				t.legIntPurposesList = r(t.legIntPurposes, e.purposes),
				t.hasMoreList = t.specialFeatures.length > 0 || t.specialPurposes.length > 0 || t.features.length > 0,
				t.featuresList = r(t.features, e.features),
				t.specialPurposesList = r(t.specialPurposes, e.specialPurposes, t ? .dataRetention ? .specialPurposes),
				t.specialFeaturesList = r(t.specialFeatures, e.specialFeatures),
				t.policyUrl = (e => {
					if(!e) return "";
					let t = e[0] ? .privacy || "";
					return e.forEach((e => {
						"fr" !== e.langId ? "en" === e.langId && (t = e.privacy) : t = e.privacy
					})),
					t
				})(t.urls),
				t.hasDataDeclaration = t.dataDeclaration && t.dataDeclaration.length > 0,
				t.dataCategoryList = r(t.dataDeclaration || [], e.dataCategories),
				s.push(t)
			})),
			s
		};
	let Rt, xt, Dt = !1;
	void 0 !== document.hidden ? (Rt = "hidden", xt = "visibilitychange") : void 0 !== document.msHidden ? (Rt = "msHidden", xt = "msvisibilitychange") : void 0 !== document.webkitHidden && (Rt = "webkitHidden", xt = "webkitvisibilitychange");
	const $t = (e, t) => {
			fetch(e).then((e => e.json())).then((e => {
				_((() => {
					t(e)
				}))
			}))
		},
		Ut = () => {
			document[Rt] || !1 !== Dt || (l("visibility visible, fetch impression"), Gt(), Dt = !0)
		},
		Ft = () => {
			l(`collect impression ${h.modules[h.displayMode].tpl}`);
			let e = `https://${h.hosts.cmp}/api/impression`;
			"" !== h.cookiePrefix && (e = `${e}?cp=${h.cookiePrefix}`),
			fetch(e, {
				credentials: "include",
				method: "post",
				headers: {
					Accept: "application/json",
					"Content-Type": "application/json"
				},
				body: JSON.stringify({
					template: h.modules[h.displayMode].tpl,
					entryPoint: h.entryPoint,
					debug: i(),
					...dt()
				})
			})
		},
		Gt = () => {
			void 0 === document.addEventListener || void 0 === document[Rt] ? Ft() : document[Rt] ? (l("visibility hidden, wait for visibilitychange to fetch impression"), document.addEventListener(xt, Ut, !1)) : Ft()
		},
		Ht = e => {
			l(`collect action ${e}`),
			fetch(`https://${h.hosts.cmp}/api/action`, {
				credentials: "include",
				method: "post",
				headers: {
					Accept: "application/json",
					"Content-Type": "application/json"
				},
				body: JSON.stringify({
					template: h.modules[h.displayMode].tpl,
					action: e
				})
			})
		};

	function jt(e = {}) {
		const t = k();
		t && t.publisher && (t.privacy && null === t.privacy.getVisitorMode() && t.privacy.setVisitorMode("cnil", "exempt"), t.publisher.set(e), t.dispatch())
	}

	function Bt(e = {}) {
		const t = k();
		t && t.publisher && t.publisher.send(e)
	}

	function Qt() {
		return window.pa
	}
	const qt = {
		AD: "display",
		AC: "display",
		AT: "display",
		SEC: "sl",
		EPR: "email",
		EREC: "email",
		ES: "email",
		AL: "affiliate"
	};

	function zt() {
		const e = Kt();
		if(e && "none" !== e) {
			const [t, s, ...n] = e.split("-");
			if(qt[t] && s) return {
				lmd_medium: qt[t],
				lmd_campaign: s,
				lmd_creation: n ? n.join("-") : n
			}
		}
		return {}
	}
	const Kt = e => Jt("xtor", e) || "none",
		Jt = (e, t) => {
			const s = t || document.location.href,
				n = e.replace(/[[]/, "\\[").replace(/[\]]/, "\\]"),
				o = new RegExp(`[\\?&#]${n}=([^&#]*)`).exec(s);
			return null == o ? null : decodeURIComponent(o[1])
		};

	function Wt() {
		const e = new URLSearchParams(decodeURIComponent(window.location.search)),
			t = new URLSearchParams(decodeURIComponent(window.location.hash).replace("#", "?")),
			s = {...zt()
			},
			n = "lmd_";
		return t.forEach(((e, t) => {
			if(Yt(t, n)) {
				const n = t.split("_")[1];
				s[`src_${n}`] = e
			}
		})), e.forEach(((e, t) => {
			if(Yt(t, n)) {
				const n = t.split("_")[1];
				s[`src_${n}`] = e
			}
		})), o = s, 0 === Object.keys(o).length && o.constructor === Object ? null : s;
		var o
	}

	function Yt(e, t = "lmd_") {
		return 0 === e.indexOf(t)
	}
	const Zt = "src.force",
		Xt = "publisher.impression",
		es = "publisher.click",
		ts = [];

	function ss() {
		const e = Wt();
		e && rs(Zt, {
			src_force: !0,
			...e
		})
	}

	function ns(e = {}) {
		rs(Xt, {
			onsitead_type: "Publisher",
			...e
		})
	}

	function os(e = {}) {
		rs(es, {
			onsitead_type: "Publisher",
			...e
		})
	}

	function rs(e, t) {
		const s = Qt();
		s ? (c(`[Piano] - Send sync command -> sendEvent | Event name -> ${e} (w/ ${JSON.stringify(t)})`), s.sendEvent(e, t)) : function(e, t) {
			ts.push(["sendEvent", e, t]), c(`[Piano] - Push sendEvent -> ${e}`)
		}(e, t)
	}

	function is(e) {
		ts.push(["privacy.setMode", e]), c(`[Piano] - Push privacy -> ${e}`)
	}

	function as(e) {
		const t = k(),
			s = {
				impression: {
					campaignId: e || us(),
					...h.abtests.variantName && {
						variant: `[${h.abtests.variantName.replace(/-/g,"_")}]`
					}
				}
			};
		if(m()) {
			ns({
				onsitead_campaign: (e || us() || "").replace("[", "").replace("]", "").trim(),
				...h.abtests.variantName && {
					onsitead_variant: h.abtests.variantName
				}
			})
		} else t ? jt(s) : P(jt.bind(null, s))
	}

	function cs() {
		ps("[accepter]")
	}

	function ls() {
		ps("[refuser]")
	}

	function ds() {
		ps("[parametrer]")
	}

	function ps(e, t) {
		const s = k(),
			n = {
				click: {
					campaignId: t || us(),
					creation: e,
					...h.abtests.variantName && {
						variant: `[${h.abtests.variantName.replace(/-/g,"_")}]`
					}
				}
			};
		if(m()) {
			const s = e;
			os({
				onsitead_campaign: (t || us() || "").replace("[", "").replace("]", "").trim(),
				onsitead_creation: s.replace("[", "").replace("]", "").trim(),
				...h.abtests.variantName && {
					onsitead_variant: h.abtests.variantName
				}
			})
		} else s ? Bt(n) : P(Bt.bind(null, n))
	}

	function us() {
		return {
			cookiewall: "[cookie wall]",
			standard: "[cmp standard]",
			subscriber: "[cmp abo]"
		}[h.displayMode]
	}

	function hs() {
		const e = k();
		if(e && e.privacy) {
			const {
				name: t
			} = e.privacy.getVisitorMode() || {};
			if("optout" === t) return;
			"optin" !== t && e.privacy.setVisitorOptin()
		}
	}

	function ms() {
		const e = k();
		if(e && e.privacy) {
			const {
				name: t
			} = e.privacy.getVisitorMode() || {};
			if("optout" === t) return;
			"exempt" !== t && e.privacy.setVisitorMode("cnil", "exempt")
		}
	}

	function gs() {
		const e = k();
		if(e && e.setProps) {
			const t = fs();
			t && e.setProps({
				xto: t,
				"b:src_force": "true"
			}, !0)
		}
	}
	document.addEventListener("lmdPianoLoaded", (function() {
		const e = window ? ._pac ? .queueVarName || window ? .GDPR_CONFIG ? .usePianoQueue || "_paq";
		window[e] = window[e] || [];
		for(let t = 0; t < ts.length; t += 1) c(`[Piano] - Send async command -> ${ts[t][0]} | Event name -> ${ts[t][1]} (w/ ${JSON.stringify(ts[t][2])})`), window[e].push(ts[t])
	}));
	const fs = e => vs("xtor", e) || "none",
		vs = (e, t) => {
			const s = t || document.location.href,
				n = e.replace(/[[]/, "\\[").replace(/[\]]/, "\\]"),
				o = new RegExp(`[\\?&#]${n}=([^&#]*)`).exec(s);
			return null == o ? null : decodeURIComponent(o[1])
		};

	function ys(e, t) {
		const s = e || function(e) {
			let t = null;
			if(e) {
				const s = Object.keys(e),
					n = [];
				for(let t = 0; t < s.length; t += 1)
					if(!0 === e[s[t]]) {
						const e = bs(s[t]);
						e && n.push(e)
					}
				t = n.join(" / "), n.length === s.length ? t = "tout_accepter" : 0 === n.length && (t = "tout_refuser")
			}
			return t
		}(t);
		if(m()) {
			os({
				onsitead_campaign: "gestion cookies",
				onsitead_creation: s
			})
		} else {
			! function(e = {}) {
				const t = k();
				t && t.click.send(e)
			}({
				name: s,
				chapter1: "cookies",
				type: "action"
			})
		}
	}

	function bs(e) {
		return {
			analytics: "analytics",
			ads: "pub",
			personalization: "perso",
			mediaPlatforms: "medias",
			social: "sociaux"
		}[e]
	}
	let ws, Es;
	const As = ({
			target: e
		}) => {
			e && S(e, "[data-gdpr-action=close]") && (Cs(), "function" == typeof Es && Es())
		},
		Ss = () => {
			if(ws) {
				const e = ws.querySelector("[name=gdpr-partners-search]");
				e && e.addEventListener("keyup", ((e, t = 200) => {
					let s;
					return(...n) => {
						clearTimeout(s),
						s = setTimeout((() => {
							e.apply(window, n)
						}), t)
					}
				})((() => {
					ws.querySelectorAll("[data-gdpr-vendor]").forEach((t => {
						"" === e.value || t.getAttribute("data-gdpr-vendor").toLowerCase().indexOf(e.value.toLowerCase()) > -1 ? t.style.display = "block" : t.style.display = "none"
					}))
				})))
			}
		},
		Cs = () => {
			ws && ws.removeEventListener("click", As),
			ct(`.${h.modules.partners.name}`),
			lt(!1)
		},
		_s = e => {
			l("render partners"),
			Es = e,
			$t(`https://${h.hosts.cmp}${h.modules.partners.tpl}?css=${h.modules.partners.css}`, (e => {
				lt(!0);
				const t = [];t.push(fetch(`https://${h.hosts.cmp}/vendor-list.json`).then((e => e.json()))),
				"fr" === h.lang && t.push(fetch(`https://${h.hosts.cmp}/purposes-fr.json`).then((e => e.json()))),
				Promise.all(t).then((t => {
					ct(".gdpr-glm-loader");
					const {
						vendors: s
					} = t[0],
					n = t[1] ? ? t[0];ws = at(((e, t, s) => {
						const n = {
							vendors: []
						};
						return n.vendors = Mt(t, s),
						Pt(e, n)
					})(e.html, n, s)),
					rt(h.modules.partners.name, e.css),
					ws && ws.addEventListener("click", As),
					Ss()
				}))
			}))
		},
		Is = "optin",
		Ls = "exempt",
		Ts = "optout";

	function Vs() {
		const e = Qt();
		if(e && e.privacy) {
			if(e.privacy.getMode() === Ts) return;
			e.privacy.setMode(Is)
		} else is(Is)
	}

	function ks() {
		const e = Qt();
		if(e && e.privacy) {
			if(e.privacy.getMode() === Ts) return;
			e.privacy.setMode(Ls)
		} else is(Ls)
	}
	let Ps, Os;
	const Ns = ({
			target: e
		}) => {
			if(e) {
				if(S(e, "[data-gdpr-expression=acceptAll]") && Ct((() => {
						ys("tout_accepter"),
						hs(),
						Vs(),
						!0 === h.content.paramsRefresh ? document.location.reload() : Ms()
					})), S(e, "[data-gdpr-expression=denyAll]") && _t((() => {
						ys("tout_refuser"),
						ms(),
						ks(),
						!0 === h.content.paramsRefresh ? document.location.reload() : Ms()
					})), S(e, "[data-gdpr-action=save]")) {
					const e = {};
					document.querySelectorAll("[data-gdpr-params-purpose]").forEach((t => {
						e[t.getAttribute("data-gdpr-params-purpose")] = t.checked
					})), ((e, t) => {
						St(e).then((() => {
							"function" == typeof t && t(),
							Lt(),
							nt(bt()),
							ot(bt())
						}))
					})(e, (() => {
						ys(null, e),
						function() {
							const e = bt();
							e && (!0 === e.analytics ? hs() : ms())
						}(),
						function() {
							const e = bt();
							e && (!0 === e.analytics ? Vs() : ks())
						}(),
						!0 === h.content.paramsRefresh ? document.location.reload() : Ms()
					}))
				}
				S(e, "[data-gdpr-action=cancel]") && (ys("annuler"), Ms(), "function" == typeof Os && Os()), S(e, "[data-gdpr-action=partners]") && (Ms(), _s((() => {
					Rs(Os)
				})))
			}
		},
		Ms = () => {
			Ps && Ps.removeEventListener("click", Ns),
			ct(`.${h.modules.parameters.name}`),
			lt(!1)
		},
		Rs = e => {
			l("render parameters"),
			e || h.setEntryPoint("parameters"),
			Os = e,
			$t(`https://${h.hosts.cmp}${h.modules.parameters.tpl}?css=${h.modules.parameters.css}`, (e => {
				lt(!0),
				Ps = at(Nt(e.html)),
				rt(h.modules.parameters.name, e.css);
				const t = bt();Object.keys(t).forEach((e => {
					document.querySelector(`[data-gdpr-params-purpose=${e}]`) && (document.querySelector(`[data-gdpr-params-purpose=${e}]`).checked = t[e])
				})),
				function() {
					if(m()) ns({
						onsitead_campaign: "gestion cookies"
					});
					else {
						const e = k();
						e && (e.page.reset(), e.page.set({
							name: "gestion",
							level2: "",
							chapter1: "cookies",
							chapter2: "",
							chapter3: ""
						}), e.dispatch())
					}
				}(),
				Ps && Ps.addEventListener("click", Ns)
			}))
		},
		xs = () => {
			ct(`.${h.modules.cookiewall.name}`),
			lt(!1)
		},
		Ds = e => {
			l("render wall"),
			h.setEntryPoint("cookiewall");
			const t = n(document.location.host, h ? .wall ? .blacklist || !1);c(`is blacklisted page for wall ? ${t}`),
			!0 !== t && $t(`https://${h.hosts.cmp}${h.modules.cookiewall.tpl}?css=${h.modules.cookiewall.css}`, (e => {
				c("toggleBodyScroll"),
				lt(!0),
				c("nodeScriptReplace"),
				it(at(Nt(e.html))),
				c("injectStyle"),
				rt(h.modules.cookiewall.name, e.css),
				c("sendCmpPublisherImpression"),
				as(),
				c("handleEvents"),
				document.querySelector("[data-gdpr-expression=acceptAll]").addEventListener("click", (() => {
					Ct((() => {
						Vs(),
						hs(),
						ss(),
						gs(),
						cs(),
						xs()
					}))
				})),
				document.querySelector("[data-gdpr-action=settings]") ? .addEventListener("click", (() => {
					ds(),
					xs(),
					Rs(Ds)
				})),
				document.querySelector("[data-gdpr-action=partners]") ? .addEventListener("click", (() => {
					xs(),
					_s((() => {
						Ds()
					}))
				})),
				document.querySelector("[data-gdpr-action=partners2]") ? .addEventListener("click", (() => {
					xs(),
					_s((() => {
						Ds()
					}))
				})),
				document.querySelector(".js-gdpr-offers") ? .addEventListener("click", (() => {
					Ht("subscribe"),
					ps("[abonnement]")
				})),
				document.querySelector(".js-gdpr-login") ? .addEventListener("click", (() => {
					Ht("login"),
					ps("[connexion]")
				})),
				document.querySelector(".js-gdpr-deny-subscribe") ? .addEventListener("click", (() => {
					Ht("subscribe"),
					ls()
				})),
				document.addEventListener("denyAllAfterSubscribe", (() => {
					_t((() => {
						ls(),
						ms(),
						ks(),
						xs()
					}))
				})),
				c("collectImpression"),
				Gt()
			}))
		};
	let $s = !1;
	const Us = ({
			target: e
		}) => {
			e && (S(e, "[data-gdpr-expression=acceptAll]") && Ct((() => {
				Vs(),
				hs(),
				ss(),
				gs(),
				cs(),
				Fs()
			})), S(e, "[data-gdpr-expression=denyAll]") && _t((() => {
				ls(),
				ms(),
				ks(),
				Fs()
			})), S(e, "[data-gdpr-action=settings]") && (ds(), Fs(), Rs(Hs)), S(e, "[data-gdpr-action=partners]") && (Fs(), _s(Hs)))
		},
		Fs = () => {
			$s && $s.removeEventListener("click", Us),
			ct(`.${h.modules.standard.name}`),
			lt(!1)
		},
		Gs = () => {
			const e = document.getElementById("js-gdpr-glm-standard-telerama");
			(function() {
				const e = window,
					t = document,
					s = t.documentElement,
					n = t.getElementsByTagName("body")[0],
					o = e.innerHeight || s.clientHeight || n.clientHeight;
				return {
					width: e.innerWidth || s.clientWidth || n.clientWidth,
					height: o
				}
			})().width < 768 && window.addEventListener("resize", (() => {
				e && e.clientHeight !== window.innerHeight && (e.style.height = `${window.innerHeight}px`)
			}))
		},
		Hs = () => {
			l("render standard"),
			h.setEntryPoint("standard"),
			$t(`https://${h.hosts.cmp}${h.modules.standard.tpl}?css=${h.modules.standard.css}`, (e => {
				lt(!0),
				$s = at(Nt(e.html)),
				rt(h.modules.standard.name, e.css),
				as(),
				$s && $s.addEventListener("click", Us),
				Gt(),
				Gs()
			}))
		};
	let js = !1;
	const Bs = ({
			target: e
		}) => {
			e && (S(e, "[data-gdpr-expression=acceptAll]") && Ct((() => {
				Vs(),
				hs(),
				ss(),
				gs(),
				cs(),
				Qs()
			})), S(e, "[data-gdpr-expression=denyAll]") && _t((() => {
				ls(),
				ms(),
				ks(),
				Qs()
			})), S(e, "[data-gdpr-action=settings]") && (ds(), Qs(), Rs(qs)))
		},
		Qs = () => {
			js && js.removeEventListener("click", Bs),
			ct(`.${h.modules.subscriber.name}`)
		},
		qs = () => {
			l("render subscriber"),
			h.setEntryPoint("subscriber"),
			$t(`https://${h.hosts.cmp}${h.modules.subscriber.tpl}?css=${h.modules.subscriber.css}`, (e => {
				js = at(Nt(e.html)),
				rt(h.modules.subscriber.name, e.css),
				as(),
				js && js.addEventListener("click", Bs),
				Gt()
			}))
		};
	let zs;
	const Ks = ({
			target: e
		}) => {
			e && (S(e, "[data-gdpr-action=remove]") && (pt.remove(Q(), {
				path: "/",
				domain: `.${t(document.location.hostname)}`
			}), pt.remove(z(), {
				path: "/",
				domain: `.${t(document.location.hostname)}`
			}), ps("[retirer]", "[retrait consentement]"), ms(), ks(), document.location.reload()), S(e, "[data-gdpr-action=cancel]") && (ps("[annuler]", "[retrait consentement]"), Js()), S(e, ".js-gdpr-remove-offers") && ps("[abonnement]", "[retrait consentement]"))
		},
		Js = () => {
			zs && zs.removeEventListener("click", Ks),
			ct(`.${h.modules.remove.name}`),
			lt(!1)
		},
		Ws = () => {
			l("render remove-consent"),
			h.setEntryPoint("remove-consent"),
			$t(`https://${h.hosts.cmp}${h.modules.remove.tpl}?css=${h.modules.remove.css}`, (e => {
				lt(!0),
				zs = at(Nt(e.html)),
				rt(h.modules.remove.name, e.css),
				as("[retrait consentement]"),
				zs && zs.addEventListener("click", Ks)
			}))
		};
	return _((() => l("DOM is ready"))), h.override(E), h.overrideFromQueryString(), (e => {
		(() => {
			c("init abtest debug 🐛🐛🐛");
			const e = s("gdpr_displayMode");!1 !== e ? c(`abtest debug - detect gdprMode -> ${e} -> abort abtest init`) : (Z.length > 0 && (h.abtests.token = te(), c(`abtest debug - is there variant matching ${h.abtests.token} ?`), Z.forEach((e => !1 === X && (c(`abtest debug - check variant ${e.key} with tokens ${e.tokens.toString()}`), e.tokens.indexOf(h.abtests.token) > -1 && e.module === h.displayMode && (c(`abtest debug - find matching variant -> ${e.key}`), X = e), !0)))), !1 !== X && (h.displayMode = X.displayMode, h.abtests.variantName = X.name, h.setTemplate(X.tpl)))
		})();
		const t = n(document.location.host, h ? .blacklistedHost || !1);
		if(c(`check blacklisted host in bootstrap => ${t}`), !0 === t) _((() => {
			l("load script for each purposes for a blacklisted host"),
			Lt(),
			nt(bt())
		}));
		else if(yt()) l("consent found"),
		et.update(vt(), !1),
		_((() => {
			l("load script for each purposes"),
			Lt(),
			nt(bt())
		}));
		else {
			l("no consent found");
			const t = kt();
			l(`is bot ? -> ${t}`);
			const s = ((e, t) => {
				if("object" != typeof t) return !1;
				const s = t.filter((e => "string" == typeof e)),
					n = t.filter((e => "object" == typeof e && e instanceof RegExp));
				return s.indexOf(e) > -1 || n.some((t => t.test(e)))
			})(document.location.pathname, h ? .blacklistedPath || !1);
			if(c(`is isblacklistedPath ? -> ${s}`), !t && !s)
				if(!0 === e) switch(l(`displayMode = ${h.displayMode}`), h.displayMode) {
					case "cookiewall":
						Ds();
						break;
					case "standard":
						Hs();
						break;
					case "subscriber":
						qs();
						break;
					case "none":
						break;
					default:
						d(`invalid display mode: ${h.displayMode}`)
				} else switch(h.displayMode) {
					case "standard":
						Hs();
						break;
					case "none":
						break;
					default:
						d(`invalid display mode: ${h.displayMode}`)
				}
		}
		C(document, "click", ".gdpr-cs-remove-consent-link", (e => {
			e.preventDefault(),
			Ws()
		})),
		C(document, "click", ".gdpr-cs-parameters-link", (e => {
			e.preventDefault(),
			"cookiewall" === h.displayMode ? Ws() : Rs()
		})),
		C(document, "click", ".iubenda-cs-preferences-link", (e => {
			e.preventDefault(),
			"cookiewall" === h.displayMode ? Ws() : Rs()
		})),
		C(document, "click", ".gdpr-cs-manage-consent-link", (e => {
			e.preventDefault(),
			"cookiewall" === h.displayMode ? Ws() : Rs()
		}))
	})(!0), e.configuration = h, e.getPurposes = bt, e.hasConsent = yt, Object.defineProperty(e, "__esModule", {
		value: !0
	}), e
}({});
//# sourceMappingURL=lemonde.min.js.map